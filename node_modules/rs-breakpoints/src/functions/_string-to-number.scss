@function _string-to-number($string) {
  // inspired by http://hugogiraudel.com/2014/01/15/sass-string-to-number/

  $digits: '0123456789';
  $number: 0;
  $negative: false;
  $units: (
    '%': 1%,
    'ch': 1ch,
    'cm': 1cm,
    'em': 1em,
    'ex': 1ex,
    'in': 1in,
    'mm': 1mm,
    'pc': 1pc,
    'pica': 1pica,
    'pt': 1pt,
    'px': 1px,
    'rem': 1rem,
    'vmax': 1vmax,
    'vmin': 1vmin,
    'vh': 1vh,
    'vw': 1vw
  );
  $unit: null;

  // is it negative?
  @if str-index($string, '-') == 1 {
    $negative: true;
    $string: str-slice($string, 2);
  }

  // parse the string and map it to the indexes of $digits
  @for $i from 1 through str-length($string) {
    $digit: str-slice($string, $i, $i);
    $index: str-index($digits, $digit);

    @if type-of($index) == number {
      $number: $number * 10 + ($index - 1);
    } @else {
      $unit: $unit#{$digit};
    }
  }

  @if $negative {
    $number: $number * (-1);
  }

  @if $unit and map-has-key($units, $unit) {
    $number: $number * map-get($units, $unit);
  }

  @if $string == $unit {
    @return false;
  }

  @return $number;
}
