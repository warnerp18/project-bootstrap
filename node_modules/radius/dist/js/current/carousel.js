(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define('radius/carousel', ['exports', 'lodash/forEach', './indicator', './utils', './gestureEvents'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('lodash/forEach'), require('./indicator'), require('./utils'), require('./gestureEvents'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.forEach, global.indicator, global.utils, global.gestureEvents);
    global.radiusCarousel = mod.exports;
  }
})(this, function (exports, _forEach, _indicator, _utils, _gestureEvents) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = carouselComponent;

  var _forEach2 = _interopRequireDefault(_forEach);

  var _indicator2 = _interopRequireDefault(_indicator);

  var _utils2 = _interopRequireDefault(_utils);

  var _gestureEvents2 = _interopRequireDefault(_gestureEvents);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    } else {
      return Array.from(arr);
    }
  }

  var SELECTOR = '.js-carousel';
  var CHILD_SELECTOR = '.js-carousel-item';
  var INDICATOR_SELECTOR = '.js-indicator';
  var JS_CLASS = 'has-js';
  var SELECTED_CLASS = 'is-selected';
  var BEFORE_CLASS = 'is-before';
  var AFTER_CLASS = 'is-after';
  var SELECTED_ATTR = 'data-selected-index';

  function carouselComponent() {
    var components = document.querySelectorAll(SELECTOR);
    (0, _forEach2['default'])(components, createCarousel);
  }

  function createCarousel(element) {
    var indicatorElement = element.querySelector(INDICATOR_SELECTOR);
    var carouselItems = element.querySelectorAll(CHILD_SELECTOR);
    var indicatorComponent = (0, _indicator2['default'])(indicatorElement);

    (0, _gestureEvents2['default'])(element);

    var model = createModel(element, {
      selectedIndex: parseInt(element.getAttribute(SELECTED_ATTR), 10)
    });

    _utils2['default'].addClass(element, JS_CLASS);
    render(carouselItems, model);

    _utils2['default'].addEventListener(element, 'click', function (event) {
      return onCarouselItemClick(model, event);
    });
    _utils2['default'].addEventListener(element, 'carouselmove', function (event) {
      render(carouselItems, model);
      indicatorComponent.setSelectedIndex(event.detail);
    });
    _utils2['default'].addEventListener(element, 'indicatorselected', function (event) {
      model.setSelectedIndex(event.detail);
    });
    _utils2['default'].addEventListener(element, 'swipe', function (event) {
      var direction = event.detail === 'left' ? 1 : -1;
      model.setSelectedIndex(model.getSelectedIndex() + direction);
    });
  }

  function createModel(emitter, _ref) {
    var selectedIndex = _ref.selectedIndex;

    var model = {
      selectedIndex: selectedIndex
    };

    return {
      getSelectedIndex: function getSelectedIndex() {
        return model.selectedIndex;
      },
      setSelectedIndex: function setSelectedIndex(index) {
        if (model.selectedIndex === index) {
          return;
        }

        model.selectedIndex = index;
        emitter.dispatchEvent(createSelectedEvent(index));
      }
    };
  }

  function onCarouselItemClick(model, event) {
    var element = event.target.closest(CHILD_SELECTOR);
    if (!element) {
      return;
    }

    model.setSelectedIndex(getElementIndex(element));
  }

  function render(children, model) {
    (0, _forEach2['default'])(children, function (child) {
      _utils2['default'].removeClass(child, BEFORE_CLASS, SELECTED_CLASS, AFTER_CLASS);
    });
    carouselTo(children[model.getSelectedIndex()]);
  }

  function carouselTo(element) {
    _utils2['default'].addClass(element.previousElementSibling, BEFORE_CLASS);
    _utils2['default'].addClass(element, SELECTED_CLASS);
    _utils2['default'].addClass(element.nextElementSibling, AFTER_CLASS);
    element.querySelector('[type="radio"]').checked = true;
  }

  function createSelectedEvent(index) {
    return new CustomEvent('carouselmove', {
      detail: index,
      bubbles: true
    });
  }

  function getElementIndex(element) {
    return [].concat(_toConsumableArray(element.parentNode.children)).indexOf(element);
  }
});