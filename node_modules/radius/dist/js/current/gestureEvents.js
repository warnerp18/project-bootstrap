(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define('radius/gestureEvents', ['exports', './utils'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('./utils'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.utils);
    global.radiusGestureEvents = mod.exports;
  }
})(this, function (exports, _utils) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = gestureEvents;

  var _utils2 = _interopRequireDefault(_utils);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var GESTURE_THRESHOLD = 10;

  function gestureEvents(element) {
    var startPosition = void 0;

    _utils2['default'].addEventListener(element, 'touchstart', function (event) {
      startPosition = event.changedTouches[0].clientX;
    });

    _utils2['default'].addEventListener(element, 'touchend', function (event) {
      var endPosition = event.changedTouches[0].clientX;
      var distance = endPosition - startPosition;
      var direction = distance < 0 ? 'left' : 'right';

      if (Math.abs(distance) > GESTURE_THRESHOLD) {
        triggerSwipeEvent(element, direction);
      }
    });
  }

  function triggerSwipeEvent(element, direction) {
    var event = new CustomEvent('swipe', {
      detail: direction,
      bubbles: true
    });

    element.dispatchEvent(event);
  }
});