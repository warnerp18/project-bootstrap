(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define('radius/sidenav', ['exports', 'lodash', './utils'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('lodash'), require('./utils'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.lodash, global.utils);
    global.radiusSidenav = mod.exports;
  }
})(this, function (exports, _lodash, _utils) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _utils2 = _interopRequireDefault(_utils);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports['default'] = function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var sidenavEl = document.querySelector('.js-r-sidenav');
    if (!sidenavEl) {
      return;
    }

    var toggleEl = sidenavEl.querySelector('.js-r-sidenav-toggle');
    var BREAKPOINT = 640;
    var ACTIVE_CLASS = 'is-active';
    var STICKY_CLASS = 'is-sticky';
    var RATIO = 1.62;
    var sidenavInitialOffset = sidenavEl.getBoundingClientRect().top + window.pageYOffset;
    var config = options;

    if (config.scrollSpy === void 0) {
      config.scrollSpy = false;
    }

    if (sidenavEl.length !== 0 && toggleEl.length !== 0) {
      bindLinks();
      bindToggle();
      bindScroll();
      bindResize();
    }

    function bindLinks() {
      _utils2['default'].addEventListener(sidenavEl, 'click', changeLink);
    }

    function changeLink(e) {
      if (e.target.tagName.toLowerCase() !== 'a') {
        return;
      }

      toggleFull();
      setActiveLink(e.target);
    }

    function setActiveLink(el) {
      if (!config.scrollSpy) {
        return;
      }

      var activeEl = sidenavEl.getElementsByClassName(ACTIVE_CLASS)[0];

      _utils2['default'].removeClass(activeEl, ACTIVE_CLASS);

      _utils2['default'].addClass(el, ACTIVE_CLASS);
    }

    function bindToggle() {
      _utils2['default'].addEventListener(toggleEl, 'click', function (e) {
        e.stopPropagation();
        toggleFull();
      });
    }

    function bindScroll() {
      _utils2['default'].addEventListener(window, 'scroll', (0, _lodash.debounce)(function () {
        if (window.innerWidth > BREAKPOINT) {
          var windowScroll = window.pageYOffset;
          var fromTop = window.innerHeight / (RATIO + 1);

          if (sidenavInitialOffset < windowScroll + fromTop) {
            if (!_utils2['default'].hasClass(sidenavEl, STICKY_CLASS)) {
              _utils2['default'].addClass(sidenavEl, STICKY_CLASS);
            }

            sidenavEl.style.top = fromTop + 'px';
          } else {
            _utils2['default'].removeClass(sidenavEl, STICKY_CLASS);
            sidenavEl.style.top = '';
          }
        }
      }, 33));
    }

    function bindResize() {
      window.onresize = (0, _lodash.debounce)(function () {
        if (window.innerWidth < BREAKPOINT) {
          sidenavEl.style.top = '';

          _utils2['default'].removeClass(sidenavEl, STICKY_CLASS);
        }
      }, 100);
    }

    function toggleFull() {
      if (_utils2['default'].hasClass(sidenavEl, ACTIVE_CLASS)) {
        _utils2['default'].removeClass(sidenavEl, ACTIVE_CLASS);
      } else {
        _utils2['default'].addClass(sidenavEl, ACTIVE_CLASS);
      }
    }
  };
});