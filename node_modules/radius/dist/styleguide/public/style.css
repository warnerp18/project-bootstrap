@charset "UTF-8";
/**
 * section: current
 * title: Current
 *
 * description:
 *   This is our current collection of components.
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/**
 * section: current/colors
 * title: Colors
 *
 * layout: current/variables/colors
 *
 * description: |
 *   A list of the approved colors to be used for Funding Circle projects. We use basic color names as key names (purple, green, blue, etc.) with various shades as array elements.
 *
 *   Retrieve the value by using:
 *   ```
 *   get-color(purple, light)
 *   // the 2nd parameter defines the shade of the color - it is an optional parameter, as the default shade is the base shade
 *   ```
 *
 * colors:
 *   - black:
 *     - colors__sample--black: get-color(black)
 *   - blue:
 *     - colors__sample--blue-lighter: get-color(blue, lighter)
 *     - colors__sample--blue-light: get-color(blue, light)
 *     - colors__sample--blue-base: get-color(blue, base)
 *     - colors__sample--blue-dark: get-color(blue, dark)
 *     - colors__sample--blue-darker: get-color(blue, darker)
 *   - green:
 *     - colors__sample--green-lighter: get-color(green, lighter)
 *     - colors__sample--green-light: get-color(green, light)
 *     - colors__sample--green-base: get-color(green, base)
 *     - colors__sample--green-dark: get-color(green, dark)
 *     - colors__sample--green-darker: get-color(green, darker)
 *   - grey cool:
 *     - colors__sample--grey-cool-light: get-color(grey-cool, light)
 *     - colors__sample--grey-cool-base: get-color(grey-cool, base)
 *     - colors__sample--grey-cool-dark: get-color(grey-cool, dark)
 *     - colors__sample--grey-cool-darker: get-color(grey-cool, darker)
 *   - grey warm:
 *     - colors__sample--grey-warm-lighter: get-color(grey-warm, lighter)
 *     - colors__sample--grey-warm-light: get-color(grey-warm, light)
 *     - colors__sample--grey-warm-base: get-color(grey-warm, base)
 *     - colors__sample--grey-warm-dark: get-color(grey-warm, dark)
 *     - colors__sample--grey-warm-darker: get-color(grey-warm, darker)
 *     - colors__sample--grey-warm-darkest: get-color(grey-warm, darkest)
 *   - magenta:
 *     - colors__sample--magenta-lighter: get-color(magenta, lighter)
 *     - colors__sample--magenta-light: get-color(magenta, light)
 *     - colors__sample--magenta-base: get-color(magenta, base)
 *     - colors__sample--magenta-dark: get-color(magenta, dark)
 *     - colors__sample--magenta-darker: get-color(magenta, darker)
 *   - orange red:
 *     - colors__sample--orange-red-lighter: get-color(orange-red, lighter)
 *     - colors__sample--orange-red-light: get-color(orange-red, light)
 *     - colors__sample--orange-red-base: get-color(orange-red, base)
 *     - colors__sample--orange-red-dark: get-color(orange-red, dark)
 *     - colors__sample--orange-red-darker: get-color(orange-red, darker)
 *   - purple:
 *     - colors__sample--purple-lighter: get-color(purple, lighter)
 *     - colors__sample--purple-light: get-color(purple, light)
 *     - colors__sample--purple-base: get-color(purple, base)
 *     - colors__sample--purple-dark: get-color(purple, dark)
 *     - colors__sample--purple-darker: get-color(purple, darker)
 *   - red:
 *     - colors__sample--red: get-color(red)
 *   - turquoise:
 *     - colors__sample--turquoise-lighter: get-color(turquoise, lighter)
 *     - colors__sample--turquoise-light: get-color(turquoise, light)
 *     - colors__sample--turquoise-base: get-color(turquoise, base)
 *     - colors__sample--turquoise-dark: get-color(turquoise, dark)
 *     - colors__sample--turquoise-darker: get-color(turquoise, darker)
 *   - yellow:
 *     - colors__sample--yellow-lighter: get-color(yellow, lighter)
 *     - colors__sample--yellow-light: get-color(yellow, light)
 *     - colors__sample--yellow-base: get-color(yellow, base)
 *     - colors__sample--yellow-dark: get-color(yellow, dark)
 *     - colors__sample--yellow-darker: get-color(yellow, darker)
 *   - white:
 *     - colors__sample--white: get-color(white)
 */
/**
 * section: current/structure/breakpoints
 * title: Breakpoints
 *
 * description: |
 *   Use this mixin for dealing with breakpoints / responsive.
 *   * `mobile-small / mobile-medium / mobile-large`
 *   * `tablet-small / tablet-medium / tablet-large`
 *   * `desktop-small / desktop-medium / desktop-large`
 *
 * layout: current/dependencies/breakpoints/breakpoints
 */
/**
 * section: current/structure/grid-system
 * title: Grids / columns
 *
 * description: |
 *   Funding Circle is using the golden ratio grid system. This is different than the usual 12 columns grid system, offering more organic layouts.
 *
 *   Keep in mind that in this case the columns have widths depending on the context and not strictly on parent. If, in a standard grid system the sum of the "column-units" has to be a certain number (e.g. `4 + 4 + 8 = 12` columns grid), in a golden ratio grid system the widths vary depending on the siblings, so they don't have to be summed up to reach a certain number (e.g. `1 + 2` is as valid as `1 + 4 + 2 + 3`).
 *
 *   The columns "widths" are represented by a parameter that can take values from 1 to 8 (1 is the smallest proportion, 8 is the biggest).
 */
/**
 * section: current/structure/grid-system/utility-classes
 * title: Utility classes
 *
 * description: |
 *   Just like Bootstrap, you can use utility classes for fast prototyping. They are splitted in 4 categories: `small`, `medium`, `large`, `extra-large` for responsive prototyping. The approach is mobile-first, where the small columns will be applied accross all resolutions unless another class for a bigger breakpoint is applied.
 *
 *   The parent of the columns require the `.col-s-wrapper / .col-m-wrapper / .col-l-wrapper / .col-xl-wrapper` class on it (the classes are inclusive, so if you use `.col-s-wrapper` the others are not required).
 *
 *   Class structure: `.col-[s/m/l/xl]-[1-8]` (e.g. `.col-m-3` will apply a proportion of 3 on the column from medium screen onwards).
 *
 * markup: current/dependencies/grid-system/utility-classes
 */
/**
 * section: current/structure/grid-system/mixin
 * title: Column generator mixin
 *
 * description: |
 *   For more fine tuned layouts, you can use the mixin and generate more complex layouts between custom breakpoints. This can be used together with `breakpoints()` mixin as it just generates the widths.
 *
 *   The mixin has to be applied on the wrapper of the columns. Adding a comma in the list will generate a new row.
 *
 *   ```
 *   .column-mixin-example {
 *      // columns mixin adds default padding to each column
 *      @include columns(3 2 1, 4 2, 4 1 2 3);
 *      // columns-no-padding mixin does not add default padding to each column
 *      @include columns-no-padding(3 2 1, 4 2, 4 1 2 3);
 *   }
 *   ```
 *
 * markup: current/dependencies/grid-system/column-mixin
 */
/**
 * section: current/structure/grid-system/golden-paddings
 * title: Golden ratio margins
 *
 * description: |
 *   Sets the right and left margins for individual elements/sections, based on the ratio of the margin in proportion to the element/section itself
 *
 *   Sets golden ratio left/right paddings for elements:
 *
 *   ```
 *   golden-ratio-paddings(5, 3, 2)
 *   // the first parameter represents the ratio/proportion of the element content
 *   // 2nd parameter is the left margin
 *   // 3rd parameter is the right margin
 *   ```
 */
.col-s-wrapper {
  display: table;
  table-layout: fixed;
  width: 100%; }

.col-s-wrapper > * {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  display: table-cell; }

.col-s-1 {
  width: 1%; }

.col-s-2 {
  width: 1.618%; }

.col-s-3 {
  width: 2.61792%; }

.col-s-4 {
  width: 4.2358%; }

.col-s-5 {
  width: 6.85353%; }

.col-s-6 {
  width: 11.08901%; }

.col-s-7 {
  width: 17.94201%; }

.col-s-8 {
  width: 29.03017%; }

.col-s-9 {
  width: 46.97082%; }

.col-s-10 {
  width: 75.99879%; }

@media only screen and (min-width: 480px) {
  .col-m-wrapper {
    display: table;
    table-layout: fixed;
    width: 100%; }
  .col-m-wrapper > * {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    display: table-cell; }
  .col-m-1 {
    width: 1%; }
  .col-m-2 {
    width: 1.618%; }
  .col-m-3 {
    width: 2.61792%; }
  .col-m-4 {
    width: 4.2358%; }
  .col-m-5 {
    width: 6.85353%; }
  .col-m-6 {
    width: 11.08901%; }
  .col-m-7 {
    width: 17.94201%; }
  .col-m-8 {
    width: 29.03017%; }
  .col-m-9 {
    width: 46.97082%; }
  .col-m-10 {
    width: 75.99879%; } }

@media only screen and (min-width: 800px) {
  .col-l-wrapper {
    display: table;
    table-layout: fixed;
    width: 100%; }
  .col-l-wrapper > * {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    display: table-cell; }
  .col-l-1 {
    width: 1%; }
  .col-l-2 {
    width: 1.618%; }
  .col-l-3 {
    width: 2.61792%; }
  .col-l-4 {
    width: 4.2358%; }
  .col-l-5 {
    width: 6.85353%; }
  .col-l-6 {
    width: 11.08901%; }
  .col-l-7 {
    width: 17.94201%; }
  .col-l-8 {
    width: 29.03017%; }
  .col-l-9 {
    width: 46.97082%; }
  .col-l-10 {
    width: 75.99879%; } }

@media only screen and (min-width: 1200px) {
  .col-xl-wrapper {
    display: table;
    table-layout: fixed;
    width: 100%; }
  .col-xl-wrapper > * {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    display: table-cell; }
  .col-xl-1 {
    width: 1%; }
  .col-xl-2 {
    width: 1.618%; }
  .col-xl-3 {
    width: 2.61792%; }
  .col-xl-4 {
    width: 4.2358%; }
  .col-xl-5 {
    width: 6.85353%; }
  .col-xl-6 {
    width: 11.08901%; }
  .col-xl-7 {
    width: 17.94201%; }
  .col-xl-8 {
    width: 29.03017%; }
  .col-xl-9 {
    width: 46.97082%; }
  .col-xl-10 {
    width: 75.99879%; } }

/**
 * section: current/functions
 * title: Functions
 *
 * description: Helper functions.
 */
/**
 * section: current/functions/lists
 * title: Lists
 *
 * description: Helper functions for manipulating lists.
 */
/**
 * section: current/functions/lists/first
 * title: First item
 *
 * description: |
 *   Get the first item from a list
 *
 *   ```
 *   first($list)
 *   // first(5 1 2 6 10) -> 5
 *   ```
 */
/**
 * section: current/functions/lists/last
 * title: Last item
 *
 * description: |
 *   Get the last item from a list
 *
 *   ```
 *   last($list)
 *   // last(5 1 2 6 10) -> 10
 *   ```
 */
/**
 * section: current/functions/negative
 * title: Negative value
 *
 * description: |
 *   Returns the negative of a value
 *
 *   ```
 *   negative($val)
 *   // negative(10rem) -> -10rem
 *   // negative(true) -> false
 *   ```
 */
/**
 * section: current/functions/str-split
 * title: Split string using a delimiter.
 *
 * description: |
 *   Returns a list of substrings.
 *
 *   ```
 *   str-split($string, $delimiter)
 *   //str-split('/some-path?query', '?') -> ('/some-path', '?query')
 *   ```
 */
/**
 * section: current/functions/env-path-helper
 * title: Asset path
 *
 * description: |
 *   Generates the path to an asset, possibly defering to the Rails asset
 *   pipeline helpers.
 *
 *   $path - path to the file
 */
/**
 * section: current/functions/sqrt
 * title: Square root of a number
 *
 * description: |
 *   Returns the square root of a number.
 *
 *   ```
 *   sqrt($val)
 *   // sqrt(30) -> 5.477
 *   // sqrt(25) -> 5
 *   ```
 */
/**
 * section: current/functions/pow
 * title: Power of a number
 *
 * description: |
 *   Rise a number to a certain power.
 *   For exponents it accepts integers or multiples of .5
 *
 *   ```
 *   pow($number, $exp)
 *   // pow(5, 2) -> 25
 *   // pow(3, 2.5) -> 15.58846
 *   // pow(3, -2) -> 0.11111
 *   ```
 */
/**
 * section: current/functions/units
 * title: Units functions
 *
 * description: Functions that are built to manipulate units.
 */
/**
 * section: current/functions/units/strip-unit
 * title: Strip unit
 *
 * description: |
 *   Remove the unit from a number
 *
 *   ```
 *   strip-unit($value)
 *   // strip-unit(10rem) -> 10
 *   ```
 */
/**
 * section: current/functions/units/separate-unit
 * title: Separate unit and values
 *
 * description: |
 *   Input a value and it returns a list with the unitless value and unit
 *
 *   ```
 *   separate-unit($val)
 *   // separate-unit(10rem) -> (10, rem)
 *   ```
 */
/**
 * section: current/functions/units/unitless
 * title: Unitless to pixels
 *
 * description: |
 *   Converts a unitless value to pixels
 *
 *   ```
 *   unitless($val)
 *   // $item: 10
 *   // unitless(10) -> 10px
 *   ```
 */
/**
 * section: current/functions/units/size
 * title: Size
 *
 * description: |
 *   We use a default base unit. This functions ensures that we always use multiples of that base unit.<br>
 *   We should always define margins / paddings and all other sizes using this function.
 *
 *   ```
 *   unit($val)
 *   // $REMsupport: true -> unit(10 auto 3 0) -> 10rem auto 3rem 0
 *   // $REMsupport: false -> unit(10 auto 3 0) -> 160px auto 30rem 0
 *   ```
 */
/**
 * section: current/icons
 * title: Icons
 * layout: current/icons
 *
 * description: Add the class to load the icon.
 *
 * icons: 
 *   - fci-go-to-arrow
 *   - fci-menu-icon
 *   - fci-tick
 *   - fci-user-circled
 *   - fci-phone-circled
 *   - fci-attention
 *   - fci-info-circled
 *   - fci-close
 *   - fci-transaction
 *   - fci-dollar-sign
 *   - fci-download-circled
 *   - fci-arrow-full-right
 *   - fci-search
 *   - fci-stats
 *   - fci-pound-sign
 *   - fci-user
 *   - fci-pencil
 *   - fci-go-up-arrow
 *   - fci-phone
 */
@font-face {
  font-family: "fc-icons";
  src: url("fonts/current/fc-icons.eot");
  src: url("fonts/current/fc-icons.eot?#iefix") format("eot"), url("fonts/current/fc-icons.woff") format("woff"), url("fonts/current/fc-icons.ttf") format("truetype"), url("fonts/current/fc-icons.svg#fc-icons") format("svg");
  font-weight: normal;
  font-style: normal; }

.fci-icon:before, [class^="fci-"]:before,
[class*=" fci-"]:before, .form-checkbox__item:before, .dynamic-number-input__focusable:after, .go-to-link:before, .message:before, .notification:before {
  font-family: "fc-icons" !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: inherit;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.fci-go-to-arrow:before, .go-to-link:before {
  content: "\E001"; }

.fci-menu-icon:before {
  content: "\E002"; }

.fci-tick:before, .form-checkbox__item:before, .message--success:before, .notification--success:before {
  content: "\E003"; }

.fci-user-circled:before {
  content: "\E004"; }

.fci-phone-circled:before {
  content: "\E005"; }

.fci-attention:before, .message--error:before, .message--warning:before {
  content: "\E006"; }

.fci-info-circled:before, .message--info:before {
  content: "\E007"; }

.fci-close:before, .notification--error:before {
  content: "\E008"; }

.fci-transaction:before {
  content: "\E009"; }

.fci-dollar-sign:before {
  content: "\E010"; }

.fci-download-circled:before {
  content: "\E011"; }

.fci-arrow-full-right:before {
  content: "\E012"; }

.fci-search:before {
  content: "\E013"; }

.fci-stats:before {
  content: "\E014"; }

.fci-pound-sign:before {
  content: "\E015"; }

.fci-user:before {
  content: "\E016"; }

.fci-pencil:before, .dynamic-number-input__focusable:after, .notification--warning:before {
  content: "\E017"; }

.fci-go-up-arrow:before {
  content: "\E018"; }

.fci-phone:before {
  content: "\E019"; }

/* ---------------------------------------------------------------------- *  SOURCE SANS
\* ---------------------------------------------------------------------- */
@font-face {
  font-family: "Source Sans Pro";
  font-weight: 400;
  font-style: normal;
  src: url("fonts/current/fonts/regular/SourceSansPro-Regular.eot");
  src: url("fonts/current/fonts/regular/SourceSansPro-Regular.eot?#iefix") format("embedded-opentype"), url("fonts/current/fonts/regular/SourceSansPro-Regular.woff2") format("woff2"), url("fonts/current/fonts/regular/SourceSansPro-Regular.woff") format("woff"), url("fonts/current/fonts/regular/SourceSansPro-Regular.ttf") format("truetype"), url("fonts/current/fonts/regular/SourceSansPro-Regular.svg#source_sans_proregular") format("svg"); }

@font-face {
  font-family: "Source Sans Pro";
  font-weight: 300;
  font-style: normal;
  src: url("fonts/current/fonts/light/SourceSansPro-Light.eot");
  src: url("fonts/current/fonts/light/SourceSansPro-Light.eot?#iefix") format("embedded-opentype"), url("fonts/current/fonts/light/SourceSansPro-Light.woff2") format("woff2"), url("fonts/current/fonts/light/SourceSansPro-Light.woff") format("woff"), url("fonts/current/fonts/light/SourceSansPro-Light.ttf") format("truetype"), url("fonts/current/fonts/light/SourceSansPro-Light.svg#source_sans_prolight") format("svg"); }

@font-face {
  font-family: "Source Sans Pro";
  font-weight: 300;
  font-style: italic;
  src: url("fonts/current/fonts/light-italic/SourceSansPro-LightIt.eot");
  src: url("fonts/current/fonts/light-italic/SourceSansPro-LightIt.eot?#iefix") format("embedded-opentype"), url("fonts/current/fonts/light-italic/SourceSansPro-LightIt.woff2") format("woff2"), url("fonts/current/fonts/light-italic/SourceSansPro-LightIt.woff") format("woff"), url("fonts/current/fonts/light-italic/SourceSansPro-LightIt.ttf") format("truetype"), url("fonts/current/fonts/light-italic/SourceSansPro-LightIt.svg#source_sans_prolight_italic") format("svg"); }

@font-face {
  font-family: "Source Sans Pro";
  font-weight: 400;
  font-style: italic;
  src: url("fonts/current/fonts/italic/SourceSansPro-It.eot");
  src: url("fonts/current/fonts/italic/SourceSansPro-It.eot?#iefix") format("embedded-opentype"), url("fonts/current/fonts/italic/SourceSansPro-It.woff2") format("woff2"), url("fonts/current/fonts/italic/SourceSansPro-It.woff") format("woff"), url("fonts/current/fonts/italic/SourceSansPro-It.ttf") format("truetype"), url("fonts/current/fonts/italic/SourceSansPro-It.svg#source_sans_proitalic") format("svg"); }

@font-face {
  font-family: "Source Sans Pro";
  font-weight: 600;
  font-style: normal;
  src: url("fonts/current/fonts/semi-bold/SourceSansPro-Semibold.eot");
  src: url("fonts/current/fonts/semi-bold/SourceSansPro-Semibold.eot?#iefix") format("embedded-opentype"), url("fonts/current/fonts/semi-bold/SourceSansPro-Semibold.woff2") format("woff2"), url("fonts/current/fonts/semi-bold/SourceSansPro-Semibold.woff") format("woff"), url("fonts/current/fonts/semi-bold/SourceSansPro-Semibold.ttf") format("truetype"), url("fonts/current/fonts/semi-bold/SourceSansPro-Semibold.svg#source_sans_prosemibold") format("svg"); }

@font-face {
  font-family: "Source Sans Pro";
  font-weight: 600;
  font-style: italic;
  src: url("fonts/current/fonts/semi-bold-italic/SourceSansPro-SemiboldIt.eot");
  src: url("fonts/current/fonts/semi-bold-italic/SourceSansPro-SemiboldIt.eot?#iefix") format("embedded-opentype"), url("fonts/current/fonts/semi-bold-italic/SourceSansPro-SemiboldIt.woff2") format("woff2"), url("fonts/current/fonts/semi-bold-italic/SourceSansPro-SemiboldIt.woff") format("woff"), url("fonts/current/fonts/semi-bold-italic/SourceSansPro-SemiboldIt.ttf") format("truetype"), url("fonts/current/fonts/semi-bold-italic/SourceSansPro-SemiboldIt.svg#source_sans_proSBdIt") format("svg"); }

/**
 * section: current/mixins
 * title: Mixins
 *
 * description: Useful mixins to use
 */
/**
 * section: current/mixins/animation
 * title: Animation
 *
 * description: Mixins for dealing with CSS animations, that fix the issues with vendor prefixes.
 */
/**
 * section: current/mixins/animation/keyframes
 * title: Keyframes
 *
 * description: |
 *   Mixin for defining keyframes, without worrying about the vendor prefixes issues.<br>
 *   Should be used alongside the `animation` mixin.
 *
 *   E.g. of usage:
 *   ```
 *   @include keyframes(slide-down) {
 *     0% { opacity: 1; }
 *     90% { opacity: 0; }
 *   }
 *   ```
 */
/**
 * section: current/mixins/animation/animation
 * title: Animation
 *
 * description: |
 *   Call animations defined by the `keyframes` mixin.
 *
 *   E.g. of usage:
 *   ```
 *   .element {
 *     @include animation('slide-down 5s 3');
 *   }
 *   ```
 */
/**
 * section: current/mixins/breakpoints
 * title: Breakpoints
 *
 * description: Helpers mixins for dealing with responsive and breakpoints
 */
/**
 * section: current/mixins/breakpoints/showbetween
 * title: Show between X and Z
 *
 * description: |
 *   Mixin for showing content between two breakpoints. If one is set to false, it will be ignored.
 *
 *   E.g. of usage:
 *   ```
 *   .test {
 *     @include show-between(mobile-large, tablet-large, block);
 *   }
 *   ```
 */
/**
 * section: current/mixins/breakpoints/hidebetween
 * title: Hide between X and Z
 *
 * description: |
 *   Mixin for hiding content between two breakpoints. If one is set to false, it will be ignored.
 *
 *   E.g. of usage:
 *   ```
 *   .test {
 *    @include hide-between(mobile-small, tablet-large);
 *   }
 *   ```
 */
/**
 * section: current/mixins/position
 * title: Positioning
 *
 * description: Mixins to use for positioning elements in page
 */
/**
 * section: current/mixins/position/center-block
 * title: Center block
 *
 * description: |
 *   Center block elements using `margin: auto`
 *
 *   E.g. of usage:
 *   ```
 *   .test {
 *    @include center-block($top: false, $bottom: false)
 *    // if $top / $bottom are false, they will be ignored
 *    // you can set both top and bottom, or just one of them
 *   }
 *   ```
 */
/**
 * section: current/mixins/position/pos
 * title: Position
 *
 * description: |
 *   Use this as a shorthand for different positionings
 *
 *   E.g. of usage:
 *   ```
 *   .test {
 *    @include pos(top, right, bottom, left, position, z-index)
 *    // all parameters are optional
 *   }
 *   ```
 */
/**
 * section: current/mixins/position/posabs
 * title: Position absolute
 *
 * description: |
 *   Use this as a shorthand for position absolute
 *
 *   E.g. of usage:
 *   ```
 *   .test {
 *    @include pos-abs(top, right, bottom, left, z-index)
 *    // all parameters are optional
 *   }
 *   ```
 */
/**
 * section: current/mixins/position/center-abs
 * title: Center with position absolute
 *
 * description: |
 *   This will center an element in the center of the relative parent, using position absolute. Requires the element to have `width` and `height` defined.
 *
 *   E.g. of usage:
 *   ```
 *   .test {
 *      @include center-abs($z-index: 3)
 *   }
 *   ```
 */
/**
 * section: current/mixins/conditionals
 * title: Browser conditionals
 *
 * description: |
 *   Use these mixins to generate CSS either only for IE, or for everything else and not IE.<br>
 *   It requires the `body` to have a class called `ie-<IE VERSION>`, where `<IE VERSION>` is `8` or `9`.
 */
/**
 * section: current/mixins/conditionals/forie
 * title: Target only IE
 *
 * description: |
 *   Use this mixin to condition content only for IE.
 *
 *   E.g. of usage:
 *   ```
 *   .test {
 *     @include for-ie(8) {
 *       // style only for IE8
 *       display: table;
 *     }
 *   }
 *   ```
 */
/**
 * section: current/mixins/conditionals/notie
 * title: Target everything else, except IE
 *
 * description: |
 *   Use this mixin to condition content for modern browsers, except IE (8 or 9).
 *
 *   E.g. of usage:
 *   ```
 *   .test {
 *    @include not-ie(8) {
 *      // style for modern browsers, except IE8
 *      display: flex;
 *    }
 *   }
 *   ```
 */
/**
 * section: current/mixins/utilities
 * title: Utilities
 *
 * description: Miscellaneous utility mixins.
 */
/**
 * section: current/mixins/utilities/box-sizing
 * title: Box sizing
 * description: this should always be border box
 */
/**
 * section: current/mixins/utilities/opacity
 * title: Opacity
 * description: sets the opacity in a cross browser compatible way.
 */
/**
 * section: current/mixins/utilities/gradient
 * title: Gradient
 * description: |
 *   @include gradient($orientation,($color-list),[$angle]);
 *   $orientation: string -> horizontal / vertical / radial / angle
 *   $color-list: a list of pairs for color stops (color percentage)
 *              e.g (rgb(0,0,0) 0%, rgb(255,255,255) 15%, rgb(0,0,0) 100%)
 *   $angle: if $orientation: angle, then here you set the angle degree
 *            e.g. @include gradient(angle,(...),50deg);
 */
/**
 * section: current/mixins/utilities/prefix
 * title: Prefix
 * description: Generate a declaration with vendor prefixes.
 */
/**
 * section: current/mixins/utilities/list-unstyled
 * title: Unstyled lists
 *
 * description: |
 *   Remove the default list style and reset its margin and padding
 *
 *   E.g. of usage:
 *   ```
 *   ul {
 *     @include list-unstyled;
 *   }
 *   ```
 */
/**
 * section: current/mixins/utilities/transition
 * title: Transition
 * description: |
 *   $property: all / background / color / height / width / outline
 *   $duration: any number
 *   $unit: ms / s
 *   $function: ease / linear / ease-in / ease-out / ease-in-out
 */
/**
 * section: current/mixins/utilities/triangle
 * title: Triangle generator
 * description: |
 *   $size: (width,height) - if height is not specified, height = width
 *   $direction: up / down / right / left /
 *               up left / up right
 *               down left / down right
 */
/**
 * section: current/typography
 * title: Typography
 *
 * description: Using the right font family is important when building a brand. Also, setting the correct `font-size` and `line-height`.
 */
/*
function that calculates the corresponding line heights relative to the font sizes calculated with get-font-sizes() function
it returns a list with the line heights
the line height is the first multiple of baseline after the font size
*/
/**
 * section: current/typography/font
 * title: Fonts
 *
 * description: |
 *   Funding Circle uses a font scaling method called the ditonic golden ratio.<br>
 *   In order to make sure you are using the correct font size, you can send a note (parameter) to a mixin called `font()`
 *
 *   The `font()` mixin also will automatically adjust the `line-height` to the correct value (the `line-height` is the first multiple of the get-const(config, baseline)).
 *
 *   If you want to disable the `line-height`, set the 2nd parameter to `false`.
 *
 *   Options for font size (t-shirt sizing):
 *   `x-small, small, medium, large, x-large, 2x-large, 3x-large, 4x-large, 5x-large`
 *
 *   E.g. of usage:
 *   ```
 *   .example-element {
 *     @include font(x-large, [$line-height: true/false]);
 *   }
 *   ```
 *
 * modifiers:
 *   font-size-x-small: '@include font(x-small);'
 *   font-size-small: '@include font(small);'
 *   font-size-medium: '@include font(medium);'
 *   font-size-large: '@include font(large);'
 *   font-size-x-large: '@include font(x-large);'
 *   font-size-2x-large: '@include font(2x-large);'
 *   font-size-3x-large: '@include font(3x-large);'
 *   font-size-4x-large: '@include font(4x-large);'
 *   font-size-5x-large: '@include font(5x-large);'
 *
 * markup: current/typography/mixins/font
 */
.upper-title {
  font-size: 16px;
  line-height: 24px;
  margin-bottom: 16px;
  font-weight: 300;
  text-transform: uppercase; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 1em;
  font-weight: 600; }

/**
 * section: current/structure
 * title: Structure
 *
 * description: Everything related to the page structure.
 */
/**
 * section: current/structure/mixins
 * title: Structure mixins
 */
/* ---------------------------------------------------------------------- *  COLORS FOR SELECTED TEXT
\* ---------------------------------------------------------------------- */
/**
 * section: current/structure/mixins/wrap
 * title: Wrap
 * description: |
 *   Adjust the left and right padding of selected element
 *
 *   $padding: false / true / number
 *     a) FALSE - default value
 *     b) TRUE - default padding applied
 *     c) NUMBER - enter a numeric value to be received in REMs, e.g. entering "1" would pass that value as size(1)
 *
 *   $breakpoints: two values that determine when the padding is applied
 */
.u-wrap, .u-wrap--nopad {
  margin: 0 auto;
  width: 100%;
  max-width: 1200px; }

/**
 * section: current/structure/mixins/group-elements
 * title: Element groups
 * description: |
 *   $item is an arglist which takes lists with the following params:
 *     - min breakpoint - integer or false
 *     - max breakpoint - integer or false
 *     - number of columns - integer
 *     - center last - bolean (use with care, it generates a lot of CSS)

 *   e.g:
 *   layout with:
 *     - 1 column between a and b
 *     - 2 columns between b and c
 *     - 3 columns between c and d and last one centered

 *   @include group-elements(a b 1 false, b c 2 false, 3 c d true);
 */
.u-clear-float {
  clear: both; }

.u-clearfix:after {
  display: table;
  width: 100%;
  clear: both;
  content: ''; }

html,
body {
  font-size: 16px;
  line-height: 24px;
  vertical-align: baseline; }

::-moz-selection {
  background: #ab3383;
  color: white; }

::selection {
  background: #ab3383;
  color: white; }

html {
  box-sizing: border-box; }

*,
*:after,
*:before {
  box-sizing: inherit; }

body {
  font-family: "Source Sans Pro", sans-serif;
  color: black;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background: #fafafa; }

a {
  transition: all 200ms ease;
  color: #097fc9;
  text-decoration: none; }
  a:hover {
    text-decoration: underline; }

p {
  margin: 0 0 1em; }

fieldset {
  padding: 0;
  margin: 0;
  border: 0; }

:last-child {
  margin-bottom: 0; }

/**
 * section: current/utility-classes
 * title: Utility classes
 *
 * description: Use these helpful utility classes to add certain behaviors and styling to your elements. To use, add the class(es) directly to your HTML.
 */
/**
 * section: current/utility-classes/floats
 * title: Floats
 *
 * description: |
 *   You can float an element left or right. Use the class `u-clear-float` to clear floats on elements and `u-clearfix` to clear an element's child elements.
 *
 * modifiers:
 *   u-float-left: Float left
 *   u-float-right: Float right
 *
 * markup: current/utility-classes/floats
 */
.u-float-left {
  float: left; }

.u-float-right {
  float: right; }

/**
 * section: current/utility-classes/alignment
 * title: Alignment
 *
 * description: Change the text alignment of an element to center or center an element by using the class `u-center`.
 *
 * modifiers:
 *   u-center-text: Center aligned
 *
 * markup: current/utility-classes/alignment
 */
.u-center {
  margin-right: auto;
  margin-left: auto; }

.u-center-text {
  text-align: center; }

/**
 * section: current/utility-classes/layout
 * title: Layout
 *
 * description: |
 *   Change the layout of an element either by display or position.
 *   Use the class `u-full-width` for a block display at a width of 100%.
 *   Use the classes `u-block` for a block display and `u-inline-block` for an inline-block display.
 *   Use the classes `u-relative` for a relative position and `u-absolute` for an absolute position.
 *
 *   ```
 *   <img class="u-full-width">
 *   <div class="u-full-width">...</div>
 *   ```
 *
 *   ```
 *   <img class="u-block">
 *   ```
 *
 *   ```
 *   <div class="u-inline-block">...</div>
 *   ```
 *
 *   ```
 *   <div class="u-relative">
 *     <div class="u-absolute">...</div>
 *   </div>
 *   ```
 */
.u-block {
  display: block; }

.u-inline-block {
  display: inline-block; }

.u-relative {
  position: relative; }

.u-absolute {
  position: absolute; }

/**
 * section: current/utility-classes/images
 * title: Images
 *
 * description: Style your image to be round.
 *
 * modifiers:
 *   u-img-round: Round image
 *
 * markup: current/utility-classes/images
 */
.u-img-round {
  display: block;
  width: 100%;
  height: auto;
  border-radius: 50%; }

/**
 * section: current/utility-classes/fonts
 * title: Font properties
 *
 * description: Update the properties of fonts.
 *
 * modifiers:
 *   u-font-regular: Regular font weight
 *   u-font-bold: Bold font weight
 *   u-font-light: Light font weight
 *
 * markup: current/utility-classes/fonts
 */
.u-font-regular {
  font-weight: 400; }

.u-font-bold {
  font-weight: 600; }

.u-font-light {
  font-weight: 300; }

/**
 * section: current/utility-classes/backgrounds
 * title: Background colors
 *
 * description: Change the background of an element by assigning the following classes.
 *
 * modifiers:
 *   u-background-1: get-color(grey-warm)
 *   u-background-2: get-color(yellow)
 *   u-background-3: get-color(blue, lighter)
 *   u-background-4: get-color(white)
 *   u-background-5: get-color(grey-warm, darkest)
 *   u-background-6: get-color(magenta)
 *   u-background-7: get-color(grey-warm, light)
 *   u-background-8: get-color(grey-cool, darker)
 *
 * markup: current/utility-classes/backgrounds
 */
.u-background-1 {
  background: #e8e8e8; }

.u-background-2 {
  background: #fbc740; }

.u-background-3 {
  background: #dbf1ff; }

.u-background-4 {
  background: white; }

.u-background-5 {
  background: #838280; }

.u-background-6 {
  background: #952d72; }

.u-background-7 {
  background: #f6f5f3; }

.u-background-8 {
  background: #383838; }

/**
 * section: current/utility-classes/wrapper
 * title: Wrapper
 *
 * description: Add a left and right padding to an element, or remove the padding.
 *
 * modifiers:
 *   u-wrap: Add the default padding
 *   u-wrap--nopad: Apply zero padding
 *
 * markup: current/utility-classes/wrapper
 */
.u-wrap {
  padding-right: 16px;
  padding-left: 16px; }

/**
 * section: current/utility-classes/titles
 * title: Titles
 *
 * description: Adds default styling to label-style titles that precede main title
 *
 * modifiers:
 *   u-title-label: Add the default styling for title type
 *
 * markup: current/utility-classes/titles
 */
.u-title-label {
  font-size: 13px;
  line-height: 16px;
  margin-top: 0;
  margin-bottom: 0;
  font-weight: 400;
  text-transform: uppercase; }

/**
 * section: current/utility-classes/visually-hidden
 * title: Hide content for accessibility
 *
 * description: Hides the content while keeping it focusable and available to screen readers. See https://snook.ca/archives/html_and_css/hiding-content-for-accessibility and HTML5 Boilerplate for details
 *
 * modifiers:
 *   u-visually-hidden: Visually hide this block
 *
 * markup: current/utility-classes/visually-hidden
 */
.u-visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  border: 0; }

/**
 * section: current/utility-classes/currency-label
 * title: Currency label
 *
 * description: Prepends the value with a currency sign defined as a data attribute
 *
 * modifiers:
 *   u-currency-label: Visually hide this block
 *
 * markup: current/utility-classes/currency-label
 */
.u-currency-label:before {
  content: attr(data-currency); }

/**
 * section: current/components
 * title: Components
 *
 * description:
 *   This is a collection of ready-made and reusable components.
 *   Some of the following components require a specific HTML structure, while others simply require the corresponding class names.
 */
/**
 * section: current/components/accordion
 * title: Accordion
 *
 * activateComponent: radius-component-accordion
 *
 * description: |
 *   Accordion was intented to be used in the style of presenting information under titles in a dynamic and elegant way. Some examples of using the accordion would be in an FAQ section and a Q and A section.
 *
 *   ### Environment specific behaviour:
 *   When JavaScript is not available the hidden content in the accordion will become visible.
 *
 * markup: current/components/accordion/accordion
 */
/**
 * section: current/components/buttons
 * title: Buttons
 *
 * activateComponent: radius-component-buttons
 *
 * description: |
 *   To create a button, simply add the <code>.btn</code> class to a <code>button</code>, <code>a</code>, or <code>input</code> element.<br>
 *   Each button should have the <code>.btn</code> class to start with, followed by the available button classes to create the desired button styling (e.g. size, importance).
 *
 * usage:
 *   btn: Basic usage
 *
 * layout: current/components/buttons/buttons
 */
/**
 * section: current/components/buttons/sizes
 * title: Sizes
 *
 * description: |
 *   By default the buttons have a predefined size. If you want to create a different sized button, you can use one of the classes listed below:
 *
 * sizes:
 *   btn--small: Small button
 *   btn--large: Large button
 *
 * layout: current/components/buttons/buttons
 */
/**
 * section: current/components/buttons/importance
 * title: Importance
 *
 * description: |
 *   Certain buttons could be more important than others. There should be a clear separation in terms of the visual order of importance of the buttons on a page.
 *
 * importance:
 *   btn--primary: Primary button. The most visible button when it comes to importance.
 *   btn--secondary: This should be used in conjunction with a primary button. It means that the button is still visible to users, but less important than the primary button.
 *   btn--secondary-alt: Same meaning as .btn-secondary. This should be used on dark backgrounds.
 *   btn--link: Least important type of button. Should be used in cases where the users are not encouraged to click it (e.g. "Erase your data"). Visually, it is similar to a regular link but it can inherit all other properties of a button (size, icons, disabled, etc.).
 *
 * layout: current/components/buttons/buttons
 */
/**
 * section: current/components/buttons/variations
 * title: Variations
 *
 * description: |
 *   Button variation go here.
 *
 * variations:
 *   btn--full: This makes the button fill 100% of the available width.
 *   btn--no-margin: By default buttons have a margin bottom set to them. This cancels that margin.
 *   is-loading: This is a state class that can be applied while an action is performed in the background (e.g. SPAs - saving / importing data).
 *   fci-[icon]: This adds an icon to the left of the button. [icon] is a placeholder for the icon name. A list of all the available icons can be found on the Variables page.
 *   btn--disabled: For disabled buttons, apply this class or simply add the `disabled` attribute.
 *
 * layout: current/components/buttons/buttons
 */
.btn, .btn--large, .btn--small, .btn--primary, .btn--secondary, .btn--secondary-alt, .btn--full {
  font-size: 16px;
  display: inline-block;
  padding: 0 16px;
  margin-bottom: 16px;
  line-height: 48px;
  white-space: nowrap;
  border: 0;
  border-radius: 4.8px; }
  .btn:hover, .btn--large:hover, .btn--small:hover, .btn--primary:hover, .btn--secondary:hover, .btn--secondary-alt:hover, .btn--full:hover {
    text-decoration: none; }

/**
 * section: current/components/form
 * title: Form elements
 *
 * description: Use the following input elements to build your form. Add a class of `u-background-1` to the wrapper for extra contrast.
 */
.form-element input, .form-element-select, .form-element textarea {
  font-size: 16px;
  display: block;
  width: 100%;
  min-height: 40px;
  padding: 0 16px;
  line-height: 40px;
  background: white;
  border: 0;
  outline: 1px solid #dddddd;
  outline-offset: initial; }
  .form-element input:focus, .form-element-select:focus, .form-element textarea:focus, .form-element input:active, .form-element-select:active, .form-element textarea:active {
    outline-color: #3e9bd6; }
  .form-element input:not([data-required]):valid, .form-element-select:not([data-required]):valid, .form-element textarea:not([data-required]):valid, .form-element input.is-valid, .is-valid.form-element-select, .form-element textarea.is-valid {
    border-right: 4px solid #78c738; }
  .form-element input:not(:focus):invalid, .form-element-select:not(:focus):invalid, .form-element textarea:not(:focus):invalid, .form-element input[data-required].is-error, [data-required].is-error.form-element-select, .form-element textarea[data-required].is-error {
    color: #d60036;
    outline-color: #d60036; }

.form-checkbox, .form-radio {
  position: relative;
  display: inline-block; }

[class*="ie"][class*="8"] .form-checkbox input, [class*="ie"][class*="8"] .form-radio input {
  z-index: 2; }

.form-checkbox__item, .form-radio__item {
  position: relative;
  z-index: 1;
  display: block;
  width: 24px;
  height: 24px; }
  .form-checkbox__item:before, .form-radio__item:before, .form-checkbox__item:after, .form-radio__item:after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    margin: auto;
    display: block; }
  .form-checkbox__item:before, .form-radio__item:before {
    z-index: 2; }
  .form-checkbox__item:after, .form-radio__item:after {
    background: white;
    border: 1px solid #dddddd;
    content: ''; }

.form-checkbox--left input, .form-radio--left input, .form-checkbox--left .form-radio__item, .form-radio--left .form-radio__item, .form-checkbox--left .form-checkbox__item, .form-radio--left .form-checkbox__item {
  position: absolute;
  top: 0;
  left: 0; }

.form-checkbox--left input, .form-radio--left input {
  top: 5.008px;
  left: 5.008px; }

.form-checkbox--left label, .form-radio--left label {
  padding-left: 32px;
  line-height: 24px; }

.form-checkbox--right input, .form-radio--right input, .form-checkbox--right .form-radio__item, .form-radio--right .form-radio__item, .form-checkbox--right .form-checkbox__item, .form-radio--right .form-checkbox__item {
  position: absolute;
  top: 0;
  right: 0; }

.form-checkbox--right input, .form-radio--right input {
  top: 5.008px;
  right: 5.008px; }

.form-checkbox--right label, .form-radio--right label {
  padding-right: 32px;
  line-height: 24px;
  text-align: right; }

.form-checkbox--bottom input, .form-radio--bottom input, .form-checkbox--bottom .form-radio__item, .form-radio--bottom .form-radio__item, .form-checkbox--bottom .form-checkbox__item, .form-radio--bottom .form-checkbox__item {
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0 auto; }

.form-checkbox--bottom input, .form-radio--bottom input {
  bottom: 5.008px; }

.form-checkbox--bottom label, .form-radio--bottom label {
  display: block;
  padding-bottom: 32px;
  text-align: center; }

.form-checkbox--top input, .form-radio--top input, .form-checkbox--top .form-radio__item, .form-radio--top .form-radio__item, .form-checkbox--top .form-checkbox__item, .form-radio--top .form-checkbox__item {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  margin: 0 auto; }

.form-checkbox--top input, .form-radio--top input {
  top: 5.008px; }

.form-checkbox--top label, .form-radio--top label {
  display: block;
  padding-top: 32px;
  text-align: center; }

.form-element-select {
  position: relative;
  height: 40px; }
  .form-element-select:before, .form-element-select:after {
    position: absolute;
    z-index: 1;
    display: block;
    content: ''; }

html:not(.ie) .form-element-select:after {
  position: absolute;
  top: 0;
  bottom: 0;
  display: block;
  width: 0;
  height: 0;
  border-top: 8px solid #383838;
  border-left: 5.6px solid transparent;
  border-right: 5.6px solid transparent;
  margin: auto 0; }

.form-element-select select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  z-index: 2;
  width: 100%;
  height: 100%;
  padding: 0 16px;
  margin: 0;
  vertical-align: middle;
  background: none;
  border: 0;
  border-radius: 0; }
  .form-element-select select:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 black;
    transition: none; }
  .form-element-select select::-ms-expand {
    display: none; }

.ie .form-element-select select {
  padding: 8px 16px; }

.form-element-select option {
  padding: 8px 16px; }

/**
 * section: current/components/form/dynamic-number-input
 * title: Dynamic Number Input Field
 *
 * activateComponent: radius-component-dynamic-number-input
 *
 * description: |
 *   Resizes with input length and allows for min as well as max value settings.
 *   An error message will appear if the criteria are not met.
 *   Only whole numbers are supported.
 *
 * markup: current/components/form/dynamic-number-input/dynamic-number-input
 */
/**
 * section: current/components/form/input
 * title: Input elements
 *
 * activateComponent: radius-component-component-input
 *
 * modifiers:
 *   is-valid: Add this class if the input is valid. The class should be applied on the `input` element
 *   is-error: Add this class if the input has an error. The class should be applied on the `input` element
 *
 * markup: current/components/form/input/input
 */
/**
 * section: current/components/form/checkbox
 * title: Checkboxes
 *
 * activateComponent: radius-component-form-checkbox
 *
 * description: |
 *   Use checkboxes for selecting one or more options from a list.
 *
 * modifiers:
 *   form-checkbox--left: align to the left of label
 *   form-checkbox--right: align to the right of label
 *   form-checkbox--bottom: align to the bottom of label
 *   form-checkbox--top: align to the top of label
 *
 * markup: current/components/form/checkbox/checkbox
 */
/**
 * section: current/components/form/radio
 * title: Radio buttons
 *
 * activateComponent: radius-component-form-radio
 *
 * description: |
 *   Use radio buttons for selecting one option out of a list of options.
 *
 * modifiers:
 *   form-radio--left: align to the left of label
 *   form-radio--right: align to the right of label
 *   form-radio--bottom: align to the bottom of label
 *   form-radio--top: align to the top of label
 *
 * markup: current/components/form/radio/radio
 */
::-webkit-input-placeholder {
  opacity: 0.4;
  filter: alpha(opacity=40);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
  font-style: italic;
  color: #383838; }

:-ms-input-placeholder {
  opacity: 0.4;
  filter: alpha(opacity=40);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
  font-style: italic;
  color: #383838; }

::-moz-placeholder {
  opacity: 0.4;
  filter: alpha(opacity=40);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
  font-style: italic;
  color: #383838; }

:-moz-placeholder {
  opacity: 0.4;
  filter: alpha(opacity=40);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
  font-style: italic;
  color: #383838; }

/**
 * section: current/components/form/select
 * title: Select element
 *
 * activateComponent: form-element-select
 *
 * modifiers:
 *   is-valid: add this class if the input is valid. The class should be applied on the `.form-element-select` element
 *   is-error: add this class if the input has an error. The class should be applied on the `.form-element-select` element
 *
 * markup: current/components/form/select/select
 */
/**
 * section: current/components/form/textarea
 * title: Textarea element
 *
 * activateComponent: radius-component-textarea
 *
 * modifiers:
 *   is-valid: add this class if the input is valid. The class should be applied on the `textarea` element
 *   is-error: add this class if the input has an error. The class should be applied on the `textarea` element
 *
 * markup: current/components/form/textarea/textarea
 */
/**
 * section: current/components/form/error-message
 * title: Error messages
 *
 * activateComponent: radius-component-error-message
 *
 * description: |
 *   Use the error-message component to display validation errors.
 *   The error message will be visible when the field is invalid and is not focused.
 *   If you'd like to show the error message only when the field has been 'touched'
 *   at least once, use the enable-required-fields JS module and mark required fields
 *   with the data-required attribute.
 *
 * markup: current/components/form/error-message/error-message
 */
/**
 * section: current/components/gotolink
 * title: Go-to-link arrows
 *
 * activateComponent: radius-component-go-to-link
 *
 * description: |
 *   The arrows are used to link to a desired section with a smooth scroll.
 *   The element should be an anchor `<a>` with the `href` linked to the section where you need to scroll to.<br><br>
 *   The arrow positions itself at the top of a section using `position: absolute` so make sure the container has a `position: relative`.
 *   Also, the background color is inherited from the parent, so make sure the parent has a defined color.
 *
 * markup: current/components/go-to-link/go-to-link
 */
/**
 * section: current/components/hero
 * title: Hero
 *
 * activateComponent: radius-component-hero
 *
 * description: |
 *   A hero is a section that sets the mood for the page, offering the most important data relevant to that page. The component by default offers only a skeleton, setting the right font size for title, content and the correct top and/or bottom minimum paddings.
 *   The component should be customised by adding a modifier class on the same level as `hero`. E.g. `<section class="hero hero--homepage">[...]</section>` and use that modifier class to add background images and various spacing.
 *
 *   ### Limitations:
 *   This component must be used only once per page, at the top (below the header but before any other content).
 *   This section spans from one edge of the browser to the other. Should not be contained inside any sort of wrapper that limits the max-width so that the background is not limited to that. The content (copy) is contained within the default wrapper (`.u-wrap`)
 *
 * markup: current/components/hero/hero
 */
/**
 * section: current/components/message
 * title: Message
 *
 * activateComponent: radius-component-message
 *
 * description: |
 *   Message box for various type of messages.
 *
 *   The component requires the `.message` class for the default info message. For other types of messages (error, warnings, success) you can add one of the classes listed below.
 *
 * modifiers:
 *   message--info: info messages
 *   message--error: error messages
 *   message--warning: warning message
 *   message--success: success message
 *
 * markup: current/components/message/message
 */
/**
 * section: current/components/notification
 * title: Notification
 *
 * activateComponent: radius-component-notification
 *
 * description: |
 *   Notification for short, snappy feedback for the user. For more elaborate messages (with title), see the messages component.
 *
 *   The component requires the `.notification` class for the default info notification. For other types of notifications (error, warnings, success) you can add one of the classes listed below.
 *
 * modifiers:
 *   notification--error: error notifications
 *   notification--warning: warning notification
 *   notification--success: success notification
 *
 * markup: current/components/notification/notification
 */
/*
 * section: current/components/pull-content
 * title: Pull-Content
 *
 * activateComponent: radius-component-pull-content
 *
 * description: |
 *   This component allows for a content box that toggles between full width and float depending on screen-size.<br><br>
 *
 *   It consists of three basic elements:<br>
 *   pull-content-wrap<br>
 *   pull-content<br>
 *   main-content (optional)<br><br>
 *
 *   The main content can be further customised by adding more classes or replacing the `.main-content` class altogether as it isn't used by Radius.<br><br>
 *
 *   The breakpoint is `tablet-medium`
 *
 *
 * modifiers:
 *   pull-content--sm: Add this modifier to the pull-content-wrap element to create a small pull-content container (Golden Ratio => 7 5)
 *   pull-content--m: Add this modifier to the pull-content-wrap element to create a medium pull-content container (Golden Ratio => 7 6)
 *
 * markup: current/components/pull-content/pull-content
 */
/*
 * section: current/components/review-details
 * title: Review Details
 *
 * activateComponent: radius-component-review-details
 *
 * description: |
 *   This component displays information back to the user either for being copied (bank transfer details) or for reviewing ("Here are your details, please review").
 *
 *   This component should be used inside a larger component that has a background that is not white. Ideally, the context should have a light grey background.
 *
 * markup: current/components/review-details/review-details
 */
/**
 * section: current/components/sidenav
 * title: Sidenav
 *
 * activateComponent: radius-component-sidenav
 *
 * description: |
 *   Has class `side-nav--no-sticky` which can be used to remove the default `position: fixed`.
 *   Mobile version is hidden with JS disabled as funcitonality is useless
 *   First link should always have `is-active` class by default
 *
 * markup: current/components/sidenav/sidenav
 */
/**
 * section: current/components/step-card
 * title: Step card
 *
 * activateComponent: radius-component-step-card
 *
 * description: |
 *   The step card is a pattern built for forms with multiple logical parts but
 *   also has a static modifier to be used without its javascript counterpart.
 *
 *   <br>
 *   The main components are:
 *   - `step-card__wrap`: This wrapper is needed if there are multiple cards in a
 *   series. This is not needed for `step-card--static`.
 *   - `step-card`: The main element. This can have the modifiers such as
 *   `--narrow` and `--static`.
 *   - `step-card__content`: The meat of the content. Contains the `__title`,
 *   `__steps`, `__def-list`, `__intro` and general content.
 *   - `step-card__buttons`: The action buttons to continue through steps
 *
 *   <br>
 *   If the content is narrower than full width, such as for a nested form, you
 *   you can apply the `step-card--narrow` modifier.
 *   <br>
 *   For the static card you can use `step-card--static`.
 *   <br>
 *   There is a `step-card--warning` class to apply a yellow `border-left`. This
 *   can be used to draw attention to a specific card. For example, in transfer
 *   ins we use it to emphasise the 'Check details' step.
 *   ```
 *   <div class="sg-step-card-wrap step-card__wrap" data-step-wrap data-step-text="Step ${step} of ${total}">
 *     <section class="step-card" data-step>
 *       <div class="step-card__content">
 *         <span class="step-card__steps" data-step-count></span>
 *         <h2 class="step-card__title">Check your personal details</h2>
 *
 *         <dl class="step-card__def-list">
 *           <dt>Name</dt>
 *           <dd>Craig David</dd>
 *         </dl>
 *       </div>
 *
 *       <div class="step-card__buttons">
 *         <a href="javascript://void(0)" class="btn--secondary btn--small btn--full">Edit my details</a>
 *         <a href="javascript://void(0)" class="btn--primary btn--small btn--full" data-step-advance>These are correct</a>
 *       </div>
 *     </section>
 *   </div>
 *   ```
 *
 * layout: current/components/step-card/step-card
 */
/**
 * section: current/components/table
 * title: Table
 *
 * activateComponent: radius-component-table
 *
 * description: |
 *   It is very important to make sure all classes and `[data]` attributes are set just like in the example.
 *
 *   There are two variations of responsive tables available, depending on the behaviour on small screens:
 *     - vertical - on small screens, the columns are transformed into cards
 *     - horizontal - on small screens, the rows are transformed into cards with the first `<td>` (that must contain `data-td-title`) as the title of the card
 *
 *   The table implementation is using `data-td-label` as the title of the card and `data-table-hide` for elements that will be hidden on small screens.
 *
 *   The implementation is not dependent on the `table` tag, but should be kept like that for semantic reasons. Also, the `<div class="table"/>` wrapper is required.
 *
 */
/**
 * section: current/components/table/table-vertical
 * title: Table - column to card
 *
 * description: |
 *   This implementation splits the table on cards based on the columns of the table. The title of each card will remain the `<th>`.
 *
 *   `data-td-label` should be set to be the same as the content of the first column to ensure that the title of the card and rows are the same across all screen widths.
 *
 *   On small screens we want to hide the column header, so we need to add `data-table-hide` on the first `<td>` or `<th>` from each `<tr>`.
 *
 * markup: current/components/table/table-vertical
 */
/**
 * section: current/components/table/table-horizontal
 * title: Table - row to card
 *
 * description: |
 *   Example of table usage
 *
 *   This implementation splits the table on cards based on the rows of the table. The title of each card should be the content of the first `<td data-td-title>`.
 *
 *   `data-td-label` should be set to be the same as the corresponding `<th>` to ensure that the title of the card and rows are the same across all screen widths.
 *
 *   On small screens we want to hide the `<thead>` because the information there will be repeated on the cards, so we need to add `data-table-hide` on it.
 *
 * modifiers:
 *   table--inline: on small screens the cards are in a row (similar to vertical table)
 *   table--label-row: on small screens the label and content fill one `<tr>`
 *   table--label-inline: on small screens we try to fit as many label / content pairs as possible
 *
 * markup: current/components/table/table-horizontal
 */
.table--vertical, .table--inline {
  width: 100%;
  padding-bottom: 40px;
  overflow: auto; }

@media only screen and (max-width: 767px) {
  .table--vertical .table__cell, .table--label-row .table__cell {
    text-align: right; } }

@media only screen and (max-width: 767px) {
  .table--vertical .table__cell:before, .table--label-row .table__cell:before {
    float: left; } }

/**
 * section: current/components/tabs
 * title: Tabs component
 *
 * activateComponent: radius-component-tabs
 *
 * description: |
 *   On mobile, or when the JavaScript is not present, the tab component 'unrolls' and is presented as a list of sections, rather than tabs.
 *
 * markup: current/components/tabs/tabs
 */
/**
 * section: current/components/carousel
 * title: Carousel
 *
 * activateComponent: radius-component-carousel
 *
 * description: |
 *   Carousel should be used as a more iconic (as in distinctive visual signature) alternative to a list of elements. This component lends itself to situations where a list of comparable options is presented, like a list of loan terms. To help illustrate the number of options this component should be used along with the indicator component.
 *
 *   ### Environment specific behaviour:
 *   On devices with coarse pointer accuracy, swipe gesture can be used to go to the next or previous carousel item.
 *   When JavaScript or flexbox are not available, this components renders as a list of elements which wraps.
 *
 *   ### Limitations:
 *   This component is best used with a limited amount of items (3-10) to both make use of it's visual appeal (less than 3 items) and avoid information overload (more than 10 items).
 *   Additionally, the component should not be placed in the vicinity of other components making use of perspective.
 *
 * markup: current/components/carousel/carousel
 */
/**
 * section: current/components/term-card
 * title: Term card
 *
 * activateComponent: radius-component-term-card
 *
 * description: |
 *   Term card is a more attractive version of a radio button used to present a term and an amount
 *
 * markup: current/components/term-card/term-card
 */
/**
 * section: current/components/indicator
 * title: Position indicator
 *
 * activateComponent: radius-component-indicator
 *
 * description: |
 *   The indicator is used to show number of associated elements along with the position of the active element. Additionally, it could be used to control the associated element, i.e. jump to element 3 out of 5.
 *
 *   **Environment specific behaviour:**
 *   On desktop (device with fine pointer accuracy), this component allows the user to jump to any other associated element.
 *   Conversely, on device with coarse pointer accuracy, this component allows the use to jump only one step forward, or one step backward with the direction determined by the position of the pointer relative to currently selected dot.
 *
 *   **Limitations:**
 *   This element depends on the availability of flexbox as well as availability of JavaScript. If either of these requirements is not met, the component will be hidden.
 *
 * markup: current/components/indicator/indicator
 */
.accordion__title {
  font-size: 33px;
  line-height: 40px;
  margin-bottom: 40px;
  font-weight: 300; }

.accordion-item {
  position: relative;
  border-bottom: 1px solid #dddddd; }

.accordion-item.is-active {
  background-color: white; }

.accordion-item:first-of-type {
  border-top: 1px solid #dddddd; }

.accordion-item__title {
  font-size: 20px;
  line-height: 24px;
  padding: 24px 48px 24px 24px;
  margin-bottom: 0;
  font-weight: 400;
  color: #097fc9; }
  .accordion-item__title:hover {
    cursor: pointer; }

.accordion-item__icon {
  position: absolute;
  top: 24px;
  right: 24px;
  width: 24px;
  height: 24px;
  color: #097fc9;
  border: 2px solid #097fc9;
  border-radius: 50%; }
  .accordion-item__icon:before, .accordion-item__icon:after {
    position: absolute;
    top: 50%;
    left: 50%;
    background-color: #097fc9;
    border-radius: 1px;
    content: ''; }
  .accordion-item__icon:before {
    width: 10px;
    height: 2px;
    margin-top: -1px;
    margin-left: -5px; }
  .accordion-item__icon:after {
    width: 2px;
    height: 10px;
    margin-top: -5px;
    margin-left: -1px; }

.accordion-item.is-active .accordion-item__icon:after {
  height: 0;
  margin-top: 0; }

.accordion-item__content {
  font-size: 16px;
  line-height: 24px;
  display: none;
  padding: 0 24px; }

.accordion-item.is-active .accordion-item__content {
  display: block;
  padding: 0 24px 24px; }

.accordion-support {
  margin-top: 32px; }

.accordion-support__item {
  display: table; }

.accordion-support__image,
.accordion-support__copy {
  display: table-cell;
  vertical-align: middle; }

.accordion-support__image {
  max-width: 96px; }

.accordion-support__image--round {
  border-radius: 50%; }

.accordion-support__copy {
  padding-right: 16px;
  padding-left: 16px; }

.accordion-support__link {
  font-size: 20px;
  line-height: 24px;
  display: block;
  font-weight: 600; }

.accordion-support--guide {
  padding-bottom: 32px;
  margin-bottom: 32px;
  border-bottom: 1px solid #dddddd; }

@keyframes loop-rotate {
  0% {
    transform: rotate(0); }
  100% {
    transform: rotate(360deg); } }

.btn--large {
  font-size: 20px;
  line-height: 24px;
  padding-top: 14px;
  padding-bottom: 14px; }

.btn--small {
  font-size: 13px;
  line-height: 16px;
  padding-top: 10px;
  padding-bottom: 10px; }

.btn--primary {
  color: white;
  background: #097fc9; }
  .btn--primary:hover, .btn--primary:focus {
    background: #3e9bd6; }
  .btn--primary:active {
    background: #065e94; }

.btn--primary.btn--disabled,
.btn--primary[disabled] {
  background: #dddddd; }

.btn--secondary {
  color: #097fc9;
  background: transparent;
  border: 1px solid #a3a2a0; }
  .btn--secondary:hover, .btn--secondary:focus {
    background: rgba(255, 255, 255, 0.6);
    border-color: #097fc9; }
  .btn--secondary:active {
    background: rgba(62, 155, 214, 0.1);
    border-color: #097fc9; }

.btn--secondary.btn--disabled,
.btn--secondary[disabled] {
  color: #c3c3c3;
  background: rgba(255, 255, 255, 0.6);
  border-color: #c3c3c3; }

.btn--secondary-alt {
  color: white;
  background: transparent;
  border: 1px solid white; }
  .btn--secondary-alt:hover, .btn--secondary-alt:focus {
    background: rgba(0, 0, 0, 0.3); }
  .btn--secondary-alt:active {
    background: rgba(0, 0, 0, 0.2);
    border-color: rgba(255, 255, 255, 0.5); }

.btn--secondary-alt.btn--disabled,
.btn--secondary-alt[disabled] {
  color: rgba(255, 255, 255, 0.2);
  background: rgba(0, 0, 0, 0.2);
  border: 0; }

.btn--link {
  padding: 0;
  font: inherit;
  color: #097fc9;
  background: none;
  border: 0; }
  .btn--link:hover, .btn--link:focus, .btn--link:active {
    text-decoration: underline;
    background: none; }

.btn[class*="fci-"]:before {
  float: left;
  margin-right: 12px;
  font-size: inherit;
  line-height: inherit; }

.btn.is-loading:after {
  animation: loop-rotate 1.4s infinite linear;
  display: inline-block;
  width: 16px;
  height: 16px;
  margin-left: 16px;
  vertical-align: middle;
  border: 2px solid white;
  border-bottom-color: transparent;
  border-radius: 50%;
  content: '';
  transform: translateZ(0); }

.btn--secondary.is-loading:after {
  border-color: #c3c3c3;
  border-bottom-color: transparent; }

.btn--full {
  display: block;
  width: 100%;
  text-align: center; }

.btn--no-margin {
  margin-bottom: 0; }

.form-checkbox__item:before {
  right: auto;
  width: 0;
  margin: auto 0 auto 15%;
  overflow: hidden;
  line-height: 24px;
  color: #097fc9; }

.form-checkbox input:checked ~ label .form-checkbox__item:before {
  width: 70%; }

.form-checkbox input:focus ~ label .form-checkbox__item:after {
  border-color: #3e9bd6; }

.error-message {
  font-size: 16px;
  line-height: 24px;
  position: relative;
  display: none;
  width: 100%;
  padding: 16px;
  margin-top: 16px;
  color: white;
  background: #d60036; }
  .error-message:before {
    display: block;
    width: 0;
    height: 0;
    border-bottom: 10px solid #d60036;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    position: absolute;
    top: -10px;
    left: 32px;
    content: ''; }
  .error-message.is-visible {
    display: block; }

.is-error ~ .error-message,
:not(:focus):invalid ~ .error-message {
  display: block; }

:not([data-required]):valid ~ .error-message {
  display: none; }

.form-element {
  margin-bottom: 16px; }

.form-radio__item:before, .form-radio__item:after {
  border-radius: 50%; }

.form-radio__item:before {
  width: 0;
  height: 0;
  background: #097fc9;
  content: ''; }

.form-radio input:checked ~ label .form-radio__item:before {
  width: 12px;
  height: 12px; }

.form-radio input:focus ~ label .form-radio__item:after {
  border-color: #3e9bd6; }

.form-element-select.is-error {
  color: #d60036;
  outline-width: 1px;
  outline-style: solid;
  outline-color: #d60036; }

html:not(.ie) .form-element-select:before {
  top: 0;
  right: 0;
  width: 41.6px;
  height: 100%;
  border-left: 1px solid #dddddd; }

html:not(.ie) .form-element-select:after {
  right: 16.64px; }

.form-element-select select {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1); }
  .form-element-select select:focus {
    outline: 1px solid #3e9bd6;
    outline-offset: 0; }

.form-element textarea {
  padding-top: 8px;
  padding-bottom: 8px;
  line-height: normal; }

.form-element__chars-left {
  font-size: 13px;
  line-height: 16px;
  margin: 8px 0;
  text-align: right; }

.dynamic-number-input {
  font-size: 33px;
  line-height: 40px;
  position: relative;
  display: inline-block;
  margin-bottom: 16px;
  border-bottom: 1px dotted rgba(0, 0, 0, 0.4); }

.dynamic-number-input::before {
  position: absolute;
  line-height: 40px;
  content: attr(data-currency); }

.dynamic-number-input__focusable {
  cursor: text; }

.dynamic-number-input__focusable:after {
  font-size: 16px;
  line-height: 24px;
  position: absolute;
  top: 0;
  right: 8px;
  bottom: 0;
  display: inline-block;
  width: 26px;
  height: 26px;
  margin: auto;
  color: white;
  text-align: center;
  pointer-events: none;
  background-color: #065e94;
  border: 1px solid #065e94;
  border-radius: 25%; }

.dynamic-number-input__submit {
  font-size: 16px;
  line-height: 24px;
  position: absolute;
  top: 0;
  right: 8px;
  bottom: 0;
  z-index: 1;
  width: 26px;
  height: 26px;
  padding: 0;
  margin-top: auto;
  margin-bottom: auto;
  color: #065e94;
  background: white;
  border: 1px solid #065e94;
  border-radius: 25%; }
  .is-clean .dynamic-number-input__submit {
    display: none; }

.dynamic-number-input__submit:after {
  content: "➔"; }

.dynamic-number-input__input-field {
  z-index: 1;
  padding-top: 0;
  padding-right: 36px;
  padding-bottom: 0;
  padding-left: .5em;
  line-height: 40px;
  background: transparent;
  border: 0; }

.dynamic-number-input__error {
  font-size: 16px;
  line-height: 24px;
  position: absolute;
  bottom: 120%;
  left: 50%;
  display: none;
  width: 240px;
  padding: 16px;
  text-align: center;
  background: white;
  -ms-transform: translateX(-50%);
      transform: translateX(-50%);
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.3); }
  .is-error .dynamic-number-input__error {
    display: block; }

.dynamic-number-input__error:after {
  position: absolute;
  bottom: 0;
  left: 50%;
  display: block;
  width: 24px;
  height: 24px;
  margin-bottom: -12px;
  margin-left: -12px;
  background: white;
  content: '';
  -ms-transform: rotate(45deg);
      transform: rotate(45deg);
  box-shadow: 1px 1px 1px -1px rgba(0, 0, 0, 0.3); }

.go-to-link {
  margin: 0 auto;
  position: absolute;
  top: -24px;
  right: 0;
  left: 0;
  z-index: 2;
  display: block;
  width: 48px;
  height: 48px;
  font-size: 30px;
  line-height: 48px;
  text-align: center;
  background: inherit;
  border-radius: 50%; }
  .go-to-link:hover {
    text-decoration: none; }

.hero {
  padding-top: 32px;
  padding-bottom: 32px;
  color: white;
  background: #772d72 no-repeat top right;
  background-size: cover; }
  @media only screen and (min-width: 640px) {
    .hero {
      padding-top: 72px;
      padding-bottom: 72px; } }

.hero__title {
  font-size: 42px;
  line-height: 48px;
  display: block;
  margin: 0 auto 16px;
  font-weight: 400; }
  @media only screen and (min-width: 640px) {
    .hero__title {
      font-size: 68px;
      line-height: 72px; } }

.hero__content {
  font-size: 20px;
  line-height: 24px; }

.message {
  position: relative;
  padding: 8px 16px;
  margin-bottom: 32px;
  background: white;
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1); }
  @media only screen and (max-width: 639px) {
    .message {
      text-align: center;
      border-bottom: 4px solid #ab3383; }
      .message:before {
        margin: 0 auto 16px; } }
  @media only screen and (min-width: 640px) {
    .message {
      border-left: 4px solid #ab3383; }
      .message:before {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 16px;
        margin: auto 0; } }
  .message:before {
    display: block;
    height: 40px;
    font-size: 40px;
    line-height: 40px;
    color: #ab3383; }

.message__title {
  font-size: 26px;
  line-height: 32px;
  display: block;
  padding: 0;
  margin-bottom: 8px;
  font-weight: 300; }

@media only screen and (min-width: 640px) {
  .message--info {
    padding-left: 80px; } }

@media only screen and (min-width: 640px) {
  .message--error {
    padding-left: 80px; } }

@media only screen and (max-width: 639px) {
  .message--error {
    border-bottom-color: #d60036; } }

@media only screen and (min-width: 640px) {
  .message--error {
    border-left: 4px solid #d60036; } }

.message--error:before {
  color: #d60036; }

@media only screen and (min-width: 640px) {
  .message--warning {
    padding-left: 80px; } }

@media only screen and (max-width: 639px) {
  .message--warning {
    border-bottom-color: #fbc740; } }

@media only screen and (min-width: 640px) {
  .message--warning {
    border-left: 4px solid #fbc740; } }

.message--warning:before {
  color: #fbc740; }

@media only screen and (min-width: 640px) {
  .message--success {
    padding-left: 80px; } }

@media only screen and (max-width: 639px) {
  .message--success {
    border-bottom-color: #78c738; } }

@media only screen and (min-width: 640px) {
  .message--success {
    border-left: 4px solid #78c738; } }

.message--success:before {
  color: #78c738; }

.notification {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  padding: 16px;
  margin-bottom: 24px;
  color: #575757;
  background: white;
  border: 0; }
  .notification:before {
    font-size: 13px;
    line-height: 16px;
    display: none;
    -ms-flex-negative: 0;
        flex-shrink: 0;
    float: left;
    width: 32px;
    height: 32px;
    margin-right: 16px;
    line-height: 32px;
    color: white;
    text-align: center;
    border-radius: 50%; }
    @media only screen and (min-width: 480px) {
      .notification:before {
        font-size: 20px;
        line-height: 24px;
        width: 48px;
        height: 48px;
        margin-right: 24px;
        line-height: 48px; } }
  .notification:first-child {
    border-top: 0; }

.notification--success {
  background: rgba(120, 199, 56, 0.1); }
  .notification--success:before {
    display: block;
    background: #468513; }

.notification--error {
  background: rgba(239, 77, 28, 0.1); }
  .notification--error:before {
    display: block;
    background: #ef4d1c; }

.notification--warning {
  background: rgba(251, 199, 64, 0.1); }
  .notification--warning:before {
    display: block;
    background: #fbc740; }

.notification--narrow {
  max-width: 600px;
  margin-right: auto;
  margin-left: auto; }

.pull-content {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column; }
  .pull-content:after {
    display: block;
    clear: both;
    content: ''; }

@media only screen and (min-width: 800px) {
  .pull-content--sm,
  .pull-content--m {
    display: block; } }

.pull-content__pull-quote {
  font-size: 20px;
  line-height: 24px;
  -ms-flex-order: 2;
      order: 2;
  padding-top: 16px;
  padding-bottom: 16px;
  margin-top: 16px;
  margin-bottom: 8px;
  font-weight: 600;
  color: #383838;
  border-top: 1px solid #c3c3c3;
  border-bottom: 1px solid #c3c3c3; }

@media only screen and (min-width: 800px) {
  .pull-content--sm .pull-content__pull-quote,
  .pull-content--m .pull-content__pull-quote {
    float: right;
    margin-top: 0; } }

@media only screen and (min-width: 800px) {
  .pull-content--sm .pull-content__pull-quote {
    width: 27.64006%;
    margin-left: 16px; } }

@media only screen and (min-width: 800px) {
  .pull-content--m .pull-content__pull-quote {
    width: 38.197%;
    margin-left: 16px; } }

.review-details__title {
  font-size: 13px;
  line-height: 16px;
  position: relative;
  margin-bottom: 8px;
  color: #383838; }

.review-details__content {
  font-size: 20px;
  line-height: 24px;
  padding: 8px;
  margin: 0 0 16px;
  text-align: center;
  text-transform: uppercase;
  background-color: #fafafa; }

@media only screen and (max-width: 639px) {
  .no-js .side-nav {
    display: none; } }

.side-nav {
  position: fixed;
  bottom: 0;
  z-index: 100;
  width: 100%;
  height: 48px;
  overflow: hidden;
  background-color: white;
  transition: height .1s linear; }
  @media only screen and (min-width: 640px) {
    .side-nav {
      position: absolute;
      bottom: auto;
      width: auto;
      height: auto;
      background-color: transparent;
      border: 0; } }
  @media only screen and (min-width: 1400px) {
    .side-nav {
      overflow: visible; } }
  .side-nav.is-sticky {
    position: absolute; }
    @media only screen and (min-width: 640px) {
      .side-nav.is-sticky {
        position: fixed; } }
  @media only screen and (max-width: 639px) {
    .side-nav.is-active {
      height: 100%;
      background-color: white; }
      .side-nav.is-active:before {
        font-size: 26px;
        line-height: 32px;
        position: absolute;
        top: 40px;
        width: 100%;
        text-align: center;
        content: attr(data-mobile-heading); } }

@media only screen and (max-width: 639px) {
  .side-nav__navigation {
    -ms-transform: translateX(-50%) translateY(-50%);
    transform: translateX(-50%) translateY(-50%);
    position: absolute;
    top: 50%;
    left: 50%;
    text-align: center; } }

.side-nav__item {
  font-size: 26px;
  line-height: 32px;
  position: relative;
  float: left;
  width: 100%;
  padding: 16px;
  clear: left;
  color: #097fc9;
  text-decoration: none;
  white-space: nowrap;
  background-color: white; }
  @media only screen and (min-width: 640px) {
    .side-nav__item {
      font-size: 16px;
      line-height: 24px;
      width: auto;
      min-width: 32px;
      padding: 8px 8px 8px 24px;
      margin-bottom: 8px;
      text-indent: -500px;
      background-color: transparent; } }
  @media only screen and (min-width: 1400px) {
    .side-nav__item {
      border-top-right-radius: 5px;
      border-bottom-right-radius: 5px;
      box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
      width: auto;
      text-indent: 0;
      background-color: white; } }
  @media only screen and (min-width: 640px) {
    .side-nav__item:before {
      position: absolute;
      top: 50%;
      left: 8px;
      width: 8px;
      height: 8px;
      margin-top: -4px;
      border: 2px solid;
      border-radius: 50%;
      content: ''; } }
  .side-nav__item:hover, .side-nav__item:active {
    text-decoration: none; }
    @media only screen and (min-width: 640px) {
      .side-nav__item:hover, .side-nav__item:active {
        border-top-right-radius: 5px;
        border-bottom-right-radius: 5px;
        box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
        color: white;
        background-color: #097fc9;
        font-weight: 400;
        text-indent: 0; }
        .side-nav__item:hover:before, .side-nav__item:active:before {
          background-color: white; } }
  @media only screen and (min-width: 640px) {
    .side-nav__item.is-active {
      border-top-right-radius: 5px;
      border-bottom-right-radius: 5px;
      box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
      color: white;
      background-color: #ab3383;
      font-weight: 400;
      text-indent: 0; }
      .side-nav__item.is-active:before {
        background-color: white; } }

@media only screen and (min-width: 640px) and (max-width: 1399px) {
  .side-nav:hover .side-nav__item,
  .side-nav:active .side-nav__item {
    border-top-right-radius: 5px;
    border-bottom-right-radius: 5px;
    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
    text-indent: 0;
    background-color: white; }
    .side-nav:hover .side-nav__item:hover, .side-nav:hover .side-nav__item:active,
    .side-nav:active .side-nav__item:hover,
    .side-nav:active .side-nav__item:active {
      color: white;
      background-color: #097fc9; }
    .side-nav:hover .side-nav__item.is-active,
    .side-nav:active .side-nav__item.is-active {
      color: white;
      background-color: #ab3383; } }

.side-nav__toggle {
  font-size: 20px;
  line-height: 24px;
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 100;
  display: none;
  width: 100%;
  height: 48px;
  padding: 8px 16px;
  border: 1px solid #dddddd; }
  @media only screen and (max-width: 639px) {
    .side-nav__toggle {
      display: block; } }
  .side-nav__toggle:focus {
    outline: none; }

.side-nav.is-active .side-nav__toggle {
  border-top: 0; }

.side-nav__triangle {
  margin-left: 8px; }
  .side-nav__triangle:after {
    display: block;
    width: 0;
    height: 0;
    border-bottom: 10px solid #575757;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    display: inline-block;
    content: ''; }

.side-nav.is-active .side-nav__triangle,
.side-nav.is-active .side-nav__label,
.side-nav__close {
  display: none; }

.side-nav.is-active .side-nav__close {
  display: initial; }

.step-card__wrap {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: center;
      justify-content: center;
  padding-bottom: 152px; }

.step-card {
  width: 100%;
  padding: 32px 16px;
  margin-bottom: 16px;
  color: #575757;
  background: white;
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.3); }
  @media only screen and (min-width: 480px) {
    .step-card {
      padding: 32px; } }

.step-card--warning {
  border-left: 4px solid #fbc740; }

.step-card--static {
  max-width: 600px;
  margin: 0 auto;
  background-color: #e8e8e8;
  box-shadow: none; }
  @media only screen and (min-width: 480px) {
    .step-card--static {
      padding-right: 16px;
      padding-left: 16px; } }
  @media only screen and (min-width: 768px) {
    .step-card--static {
      padding-right: 48px;
      padding-left: 48px; } }

.step-card__intro {
  width: 100%;
  margin-bottom: 24px; }

.step-card__intro ul {
  padding-left: 16px;
  margin-bottom: 16px; }

@media only screen and (min-width: 480px) {
  .step-card__content {
    padding-right: 40px;
    padding-left: 40px; } }

.step-card--narrow .step-card__content {
  padding-right: 16px;
  padding-left: 16px; }
  @media only screen and (min-width: 480px) {
    .step-card--narrow .step-card__content {
      padding-right: 96px;
      padding-left: 96px; } }

.step-card.is-inactive {
  position: absolute;
  top: 100%;
  left: 0;
  margin-top: -152px;
  opacity: .5; }

.step-card__steps {
  font-size: 13px;
  line-height: 16px;
  display: block;
  margin-bottom: 8px;
  color: #a3a2a0;
  text-align: center;
  text-transform: uppercase; }

.step-card__title {
  font-size: 26px;
  line-height: 32px;
  margin-bottom: 24px;
  font-weight: 400;
  color: #575757;
  text-align: center; }
  @media only screen and (min-width: 480px) {
    .step-card__title {
      font-size: 33px;
      line-height: 40px; } }

.step-card__def-list {
  margin: 0 0 32px; }

.step-card__def-list dt {
  padding: 0;
  margin: 0;
  font-weight: 300; }

.step-card__def-list dd {
  font-size: 20px;
  line-height: 24px;
  margin: 0 0 16px; }

.step-card__buttons {
  display: inline;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: justify;
      justify-content: space-between; }

@media only screen and (min-width: 640px) {
  .step-card__buttons a,
  .step-card__buttons input[type="submit"] {
    width: calc(50% - 8px); } }

.table {
  margin-bottom: 40px; }

.table__content {
  display: table;
  width: 100%;
  text-align: left;
  border: 0; }

.table__head {
  display: table-header-group;
  font-weight: 600; }

.table__body {
  display: table-row-group; }

.table__row {
  display: table-row; }
  @media only screen and (min-width: 768px) {
    .table__row {
      border-bottom: 1px solid #e8e8e8; } }

@media only screen and (min-width: 768px) {
  .table__row:hover {
    background: rgba(0, 0, 0, 0.05); } }

.table__cell {
  display: table-cell; }
  @media only screen and (min-width: 768px) {
    .table__cell {
      padding: 8px 16px; } }

.table__cell:before {
  font-size: 13px;
  line-height: 24px;
  color: #838280; }
  @media only screen and (max-width: 767px) {
    .table__cell:before {
      content: attr(data-td-label); } }

@media only screen and (max-width: 767px) {
  [data-table-hide] {
    display: none; } }

@media only screen and (max-width: 767px) {
  .table--vertical .table__content {
    width: auto;
    border-collapse: separate;
    border-spacing: 32px 0;
    table-layout: fixed; } }

@media only screen and (max-width: 767px) {
  .table--vertical .table__cell {
    min-width: 256px;
    padding: 8px 16px;
    border-right: 1px solid #e8e8e8;
    border-left: 1px solid #e8e8e8; } }

@media only screen and (max-width: 767px) {
  .table--vertical .table__row:last-child:not(.table__row--head) .table__cell {
    border-bottom: 1px solid #e8e8e8;
    box-shadow: 0 2px 0 0 rgba(0, 0, 0, 0.05); } }

@media only screen and (max-width: 767px) {
  .table--vertical .table__cell--head {
    text-align: center;
    border-top: 1px solid #e8e8e8; } }

@media only screen and (max-width: 767px) {
  .table--horizontal .table__content,
  .table--horizontal .table__body,
  .table--horizontal .table__row,
  .table--horizontal .table__cell {
    display: block;
    width: 100%; } }

@media only screen and (max-width: 767px) {
  .table--horizontal .table__row {
    max-width: 416px;
    min-width: 256px;
    padding: 16px;
    margin: 0 auto 16px;
    border: 1px solid #e8e8e8;
    box-shadow: 0 2px 0 0 rgba(0, 0, 0, 0.05); } }

@media only screen and (max-width: 767px) {
  .table__cell[data-td-title] {
    width: 100%;
    margin-bottom: 16px;
    font-weight: 600;
    text-align: center; } }

@media only screen and (max-width: 767px) {
  .table--inline .table__body {
    display: -ms-flexbox;
    display: flex; } }

@media only screen and (max-width: 767px) {
  .table--inline .table__row {
    margin: 0 16px; } }

@media only screen and (max-width: 767px) {
  .table--label-inline .table__row {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; } }

@media only screen and (max-width: 767px) {
  .table--label-inline [data-td-label] {
    width: auto;
    padding: 0 16px 16px; } }

@media only screen and (max-width: 767px) {
  .table--label-inline [data-td-label]:before {
    display: block; } }

.tablist {
  font-size: 20px;
  line-height: 24px;
  margin: 0;
  padding: 0;
  list-style: none;
  display: none;
  text-align: center; }
  @media only screen and (min-width: 640px) {
    .has-js .tablist {
      display: table; } }

.tablist li {
  display: table-cell;
  width: 1%;
  vertical-align: middle; }

.tablist__item {
  display: block;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  height: 88px;
  padding-right: 32px;
  padding-left: 32px;
  border-bottom: 5px solid #dbf1ff; }
  .tablist__item:hover, .tablist__item:focus {
    text-decoration: none;
    background: rgba(219, 241, 255, 0.5);
    outline: 0; }
  .tablist__item.is-selected {
    color: #383838;
    border-bottom-color: #097fc9; }

.tablist__item.tablist__item--transparent {
  background: transparent; }

.tabpanel {
  padding: 32px 24px;
  border-bottom: 1px solid #dddddd; }
  @media only screen and (min-width: 640px) {
    .has-js .tabpanel {
      background: white;
      border-bottom: 0; } }

@media only screen and (min-width: 640px) {
  .tabs.has-js .is-hidden {
    display: none; } }

.tabpanel__header {
  font-size: 20px;
  line-height: 24px;
  text-align: center; }
  @media only screen and (min-width: 640px) {
    .has-js .tabpanel__header {
      display: none; } }

.carousel {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
      flex-flow: row wrap;
  margin-bottom: 8px; }
  @media only screen and (min-width: 480px) {
    .carousel {
      margin-bottom: 16px; } }

.carousel__item {
  display: inline-block;
  cursor: pointer; }

.has-js .carousel__item {
  -ms-transform: scale(0.85) translateX(-70%);
      transform: scale(0.85) translateX(-70%);
  position: absolute;
  right: 0;
  left: 0;
  z-index: 1;
  width: 144px;
  margin: 0 auto;
  color: rgba(0, 0, 0, 0.4);
  background: white;
  transition: transform 300ms ease-out, color 300ms ease-out; }
  @media only screen and (min-width: 480px) {
    .has-js .carousel__item {
      -ms-transform: scale(0.7225) translateX(-170%);
          transform: scale(0.7225) translateX(-170%); } }

.has-js .carousel__item.is-selected {
  position: relative;
  z-index: 5;
  -ms-transform: scale(1);
      transform: scale(1); }

.has-js .carousel__item.is-before,
.has-js .carousel__item.is-after {
  z-index: 4;
  color: rgba(0, 0, 0, 0.64); }

@media only screen and (min-width: 480px) {
  .has-js .carousel__item.is-before {
    -ms-transform: scale(0.85) translateX(-85%);
        transform: scale(0.85) translateX(-85%); } }

.has-js .carousel__item.is-after {
  -ms-transform: scale(0.85) translateX(70%);
      transform: scale(0.85) translateX(70%); }
  @media only screen and (min-width: 480px) {
    .has-js .carousel__item.is-after {
      -ms-transform: scale(0.85) translateX(85%);
          transform: scale(0.85) translateX(85%); } }

.has-js .carousel__item.is-after ~ .carousel__item {
  -ms-transform: scale(0.85) translateX(70%);
      transform: scale(0.85) translateX(70%); }
  @media only screen and (min-width: 480px) {
    .has-js .carousel__item.is-after ~ .carousel__item {
      -ms-transform: scale(0.7225) translateX(170%);
          transform: scale(0.7225) translateX(170%); } }

.has-js .carousel__item.is-after + .carousel__item {
  z-index: 3; }

.has-js .carousel__item.is-after + .carousel__item + .carousel__item {
  z-index: 2; }

.term-card {
  display: block;
  width: 144px;
  padding: 16px;
  line-height: 0;
  text-align: center;
  cursor: inherit;
  border: 1px solid;
  border-radius: 8px; }

:checked + .term-card {
  color: #097fc9;
  background: #dbf1ff;
  border: 1px solid #3e9bd6; }

.term-card__duration {
  font-size: 13px;
  line-height: 24px;
  display: block;
  font-weight: 600;
  text-transform: uppercase; }

.term-card__amount {
  font-size: 26px;
  line-height: 32px;
  display: block;
  font-weight: 600; }

.term-card__unit {
  font-size: 13px;
  line-height: 16px;
  display: block;
  text-transform: uppercase; }

.no-flexbox .indicator,
.indicator {
  display: none; }

.has-js.indicator {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  margin-top: -4px; }

.indicator__dot {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  width: 16px;
  height: 16px;
  padding: 0;
  background: none;
  border: 0; }

.indicator__dot:after {
  display: block;
  width: 8px;
  height: 8px;
  border: 1px solid #3e9bd6;
  border-radius: 50%;
  content: ''; }

.indicator__dot.is-selected:after {
  background: #3e9bd6; }

body {
  background: white; }
  @media only screen and (min-width: 640px) {
    body {
      padding-top: 56px; } }

@media only screen and (max-width: 639px) {
  .page-documentation {
    padding-bottom: 40px; } }

.content__subcategories, .content__code-block, .colors__item {
  margin: 0;
  padding: 16px 24px;
  background: #fafafa;
  border: 1px solid #e8e8e8;
  border-radius: 3px; }

@media only screen and (min-width: 640px) {
  .content {
    padding-left: 256px; } }

.content__content {
  padding: 16px; }
  @media only screen and (min-width: 640px) {
    .content__content {
      padding: 24px; } }

.content__section {
  margin-bottom: 40px; }

.content__heading {
  font-size: 26px;
  line-height: 32px;
  font-weight: 400;
  margin: 0 0 32px;
  padding-bottom: 16px;
  border-bottom: 1px solid #e5b8e2; }
  @media only screen and (max-width: 639px) {
    .content__heading {
      text-align: center; } }
  @media only screen and (min-width: 640px) {
    .content__heading {
      font-size: 33px;
      line-height: 40px; } }

.content__subheading {
  font-size: 20px;
  line-height: 24px;
  font-weight: 400;
  margin: 0 0 16px;
  padding-left: 8px;
  border-left: 4px solid #772d72; }
  @media only screen and (min-width: 640px) {
    .content__subheading {
      font-size: 26px;
      line-height: 32px; } }

.content__component-list-heading {
  font-size: 16px;
  line-height: 24px;
  font-weight: 400;
  margin: 0 0 16px; }
  @media only screen and (min-width: 640px) {
    .content__component-list-heading {
      font-size: 20px;
      line-height: 24px; } }

.content__subcategories {
  list-style: none; }
  @media only screen and (min-width: 640px) {
    .content__subcategories {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; } }

@media only screen and (min-width: 640px) {
  .content__subcategories li {
    width: 50%; } }

@media only screen and (min-width: 980px) {
  .content__subcategories li {
    width: 33.33%; } }

.content__code-block {
  margin-bottom: 24px; }

.content__component-example {
  position: relative;
  margin-bottom: 24px;
  width: 100%; }

.component-variant {
  margin: 0 0 32px;
  padding: 16px 24px;
  border-radius: 3px;
  border: 1px solid #e8e8e8; }

.component-variant__title {
  font-size: 20px;
  line-height: 24px;
  margin: 0 0 8px;
  font-weight: 400; }

.component-variant__description {
  margin-bottom: 16px;
  color: #575757; }

.component-variant__content {
  position: relative;
  padding: 16px 0; }

.breadcrumbs {
  font-size: 13px;
  line-height: 16px;
  background: #e8e8e8;
  padding: 8px 16px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-line-pack: center;
      align-content: center; }
  .breadcrumbs:empty {
    display: none; }
  @media only screen and (max-width: 639px) {
    .breadcrumbs {
      display: none; } }

.breadcrumbs__separator {
  padding-left: 8px;
  padding-right: 8px; }
  .breadcrumbs__separator:before {
    content: '›'; }

.hero--homepage {
  background-image: url("img/hero-homepage/s.jpg");
  background-repeat: no-repeat;
  background-position: center center; }
  @media only screen and (min-width: 640px) {
    .hero--homepage {
      background-image: url("img/hero-homepage/m.jpg"); } }
  @media only screen and (max-width: 979px) {
    .hero--homepage {
      text-align: center; } }
  @media only screen and (min-width: 980px) {
    .hero--homepage {
      background-image: url("img/hero-homepage/l.jpg"); } }

.homepage-description {
  max-width: 800px; }
  .homepage-description h2 {
    font-size: 33px;
    line-height: 40px; }

@media only screen and (min-width: 640px) {
  .homepage-features {
    display: flex;
    display: -ms-flexbox;
    flex-wrap: wrap;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    width: 100%; }
    .no-flexbox .homepage-features:after {
      display: block;
      width: 100%;
      clear: both;
      content: ''; }
    .no-flexbox .homepage-features > * {
      float: left; }
    .homepage-features > :nth-child(1) {
      width: 33.33333%; }
      .no-flexbox .homepage-features > :nth-child(1) {
        clear: left; }
    .homepage-features > :nth-child(2) {
      width: 33.33333%; }
    .homepage-features > :nth-child(3) {
      width: 33.33323%; }
    .homepage-features > * {
      padding-left: 1.5rem;
      padding-right: 1.5rem; } }

.homepage-features > * {
  margin-bottom: 32px; }

.homepage-features img {
  display: block;
  max-width: 40%;
  margin: 0 auto 16px; }

.u-section-separator {
  padding-top: 48px;
  padding-bottom: 48px; }

.footer {
  font-size: 13px;
  line-height: 16px;
  padding-top: 8px;
  padding-bottom: 8px;
  color: #575757;
  text-align: center;
  background: #f6f5f3; }

.footer a {
  margin: 0 16px;
  color: inherit; }

.gsc-control-cse.gsc-control-cse {
  margin: 0;
  padding: 0;
  height: 30px;
  border: 0; }

.gsc-input-box.gsc-input-box {
  height: auto;
  border: none; }

input.gsc-search-button.gsc-search-button {
  height: 30px;
  width: auto;
  margin: 0; }

table.gsc-search-box td.gsc-input {
  vertical-align: top; }

.sg-header {
  padding-left: 16px;
  padding-right: 16px;
  color: white;
  background: #772d72; }
  @media only screen and (max-width: 639px) {
    .sg-header {
      padding-top: 16px;
      padding-bottom: 16px; } }
  @media only screen and (min-width: 640px) {
    .sg-header {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: justify;
          justify-content: space-between;
      -ms-flex-align: center;
          align-items: center;
      z-index: 10; } }

.sg-header__logo {
  font-size: 20px;
  line-height: 24px;
  position: relative;
  display: block;
  color: inherit;
  text-transform: uppercase;
  font-weight: 600;
  text-align: center;
  transform-style: preserve-3d;
  perspective: 200px; }
  .sg-header__logo:before, .sg-header__logo:after {
    display: block;
    width: 100%;
    height: 100%;
    text-align: center;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    -ms-transform-origin: bottom center;
        transform-origin: bottom center;
    transition: all 200ms ease;
    transition-property: transform, color; }
  .sg-header__logo:before {
    content: attr(data-motto);
    position: absolute;
    bottom: 0;
    left: 0;
    transform: rotateX(100deg); }
  .sg-header__logo:after {
    content: attr(data-title);
    letter-spacing: 3px; }
  .sg-header__logo:hover {
    color: #fbc740;
    text-decoration: none; }
    .sg-header__logo:hover:before {
      transform: rotateX(0); }
    .sg-header__logo:hover:after {
      transform: rotateX(-100deg); }
  @media only screen and (max-width: 639px) {
    .sg-header__logo {
      margin: 0 auto 16px; } }

.sg-header__navigation-button {
  display: none; }
  @media only screen and (max-width: 639px) {
    .sg-header__navigation-button.has-js {
      display: block; } }

@media only screen and (max-width: 639px) {
  .sg-header__group-options.has-js:not(.is-active) {
    display: none; } }

@media only screen and (min-width: 640px) {
  .sg-header__group-options {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center; } }

@media only screen and (min-width: 640px) {
  .sg-header__navigation {
    display: -ms-flexbox;
    display: flex;
    min-height: 56px;
    -ms-flex-align: stretch;
        align-items: stretch;
    -ms-flex-line-pack: center;
        align-content: center;
    white-space: nowrap; } }

.sg-header__navigation a {
  position: relative;
  color: inherit; }
  .sg-header__navigation a:before {
    content: '';
    position: absolute;
    display: block;
    width: 0;
    background: #fbc740;
    transition: width 200ms ease; }
  .sg-header__navigation a:hover {
    text-decoration: none;
    color: #fbc740; }
  @media only screen and (max-width: 639px) {
    .sg-header__navigation a {
      display: block;
      padding: 8px;
      transition: color 200ms ease; }
      .sg-header__navigation a:not(:last-child) {
        border-bottom: 1px solid rgba(255, 255, 255, 0.2); }
      .sg-header__navigation a:before {
        right: 0;
        top: 0;
        height: 100%; }
      .sg-header__navigation a:hover:before {
        width: 4px; } }
  @media only screen and (min-width: 640px) {
    .sg-header__navigation a {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: center;
          align-items: center;
      padding-left: 12px;
      padding-right: 12px; }
      .sg-header__navigation a:before {
        left: 0;
        right: 0;
        bottom: 0;
        margin-left: auto;
        margin-right: auto;
        height: 4px; }
      .sg-header__navigation a:hover:before {
        width: 100%; } }

.sg-header__search {
  color: black; }
  @media only screen and (min-width: 640px) {
    .sg-header__search {
      max-width: 320px;
      padding-right: 16px; } }

.sidebar {
  background: #310622;
  position: fixed;
  left: 0;
  width: 100%;
  overflow: auto;
  z-index: 2; }
  @media only screen and (max-width: 639px) {
    .sidebar {
      bottom: 0; } }
  @media only screen and (min-width: 640px) {
    .sidebar {
      padding: 16px;
      top: 0;
      height: 100%;
      width: 256px;
      padding-top: 72px;
      border-right: 3px solid rgba(0, 0, 0, 0.1); } }

.sidebar__toggle-button {
  z-index: 10;
  display: block;
  padding: 8px 16px;
  margin: 0;
  text-align: left;
  background: #772d72;
  width: 100%;
  color: white;
  border-radius: 0;
  border-top-width: 2px;
  transition: all 200ms ease;
  transition-property: color, background; }
  .sidebar__toggle-button:hover, .sidebar__toggle-button:focus {
    text-decoration: none;
    background: #52174e;
    color: white; }
  @media only screen and (min-width: 640px) {
    .sidebar__toggle-button {
      display: none; } }

@media only screen and (max-width: 639px) {
  .sidebar__nav {
    display: none; } }

@media only screen and (max-width: 639px) {
  .is-sidebar-active .sidebar {
    height: 100%;
    padding: 48px 16px 16px; }
  .is-sidebar-active .sidebar__nav {
    display: block; }
  .is-sidebar-active .sidebar__toggle-button {
    border-bottom: 2px solid rgba(0, 0, 0, 0.2);
    position: fixed;
    top: 0;
    left: 0; } }

@media only screen and (max-width: 639px) {
  body.is-sidebar-active {
    overflow: hidden;
    height: 100%; } }

.sidebar-nav,
.sidebar-nav ul {
  margin: 0;
  padding: 0;
  list-style: none; }

.sidebar-nav a {
  display: block;
  padding-top: 4px;
  padding-bottom: 4px;
  color: rgba(255, 255, 255, 0.5);
  position: relative;
  transition: color 200ms ease; }
  .sidebar-nav a:before {
    background: rgba(255, 255, 255, 0.8);
    content: '';
    position: absolute;
    right: 0;
    top: 0;
    width: 0;
    height: 100%;
    transition: width 200ms ease;
    z-index: 0; }
  .sidebar-nav a:hover, .sidebar-nav a:focus {
    text-decoration: none;
    color: white; }
    .sidebar-nav a:hover:before, .sidebar-nav a:focus:before {
      width: 2px; }

.sidebar-nav--level-0 > li > a {
  font-size: 20px;
  line-height: 24px;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 12px;
  color: white;
  text-transform: uppercase;
  border-left: 4px solid white;
  transition: all 200ms ease; }
  .sidebar-nav--level-0 > li > a:after {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    margin: auto 0;
    width: 0;
    height: 0;
    border: 0 solid white;
    transition: all 200ms ease; }
  .sidebar-nav--level-0 > li > a:hover {
    padding-left: 20px; }
    .sidebar-nav--level-0 > li > a:hover:before {
      display: none; }
    .sidebar-nav--level-0 > li > a:hover:after {
      display: block;
      width: 0;
      height: 0;
      border-left: 8px solid white;
      border-top: 8px solid transparent;
      border-bottom: 8px solid transparent; }

.sidebar-nav--level-1 > li {
  padding-top: 8px;
  padding-bottom: 16px; }
  .sidebar-nav--level-1 > li:not(:last-child) {
    border-bottom: 1px solid rgba(255, 255, 255, 0.5);
    margin-bottom: 8px; }

.sidebar-nav--level-1 > li > a {
  text-transform: uppercase;
  font-weight: 600;
  color: rgba(255, 255, 255, 0.8); }

.sidebar-nav--level-2 ul {
  border-left: 1px solid rgba(255, 255, 255, 0.3);
  padding-left: 8px; }

.component-variant__customisation--btn--secondary-alt,
.component-variant__customisation--contrast {
  background: #772d72;
  display: inline-block;
  padding: 16px; }

.component-variant__customisation--btn--full .component-variant__customisation--contrast {
  display: block; }

.column-mixin-example {
  display: flex;
  display: -ms-flexbox;
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  width: 100%; }
  .no-flexbox .column-mixin-example:after {
    display: block;
    width: 100%;
    clear: both;
    content: ''; }
  .no-flexbox .column-mixin-example > * {
    float: left; }
  .column-mixin-example > :nth-child(1) {
    width: 49.99927%; }
    .no-flexbox .column-mixin-example > :nth-child(1) {
      clear: left; }
  .column-mixin-example > :nth-child(2) {
    width: 30.9019%; }
  .column-mixin-example > :nth-child(3) {
    width: 19.09873%; }
  .column-mixin-example > :nth-child(4) {
    width: 72.35984%; }
    .no-flexbox .column-mixin-example > :nth-child(4) {
      clear: left; }
  .column-mixin-example > :nth-child(5) {
    width: 27.64006%; }
  .column-mixin-example > :nth-child(6) {
    width: 44.72048%; }
    .no-flexbox .column-mixin-example > :nth-child(6) {
      clear: left; }
  .column-mixin-example > :nth-child(7) {
    width: 10.55774%; }
  .column-mixin-example > :nth-child(8) {
    width: 17.08242%; }
  .column-mixin-example > :nth-child(9) {
    width: 27.63926%; }
  .column-mixin-example > * {
    padding-left: 1.5rem;
    padding-right: 1.5rem; }

.font-size-x-small {
  font-size: 10px;
  line-height: 16px; }

.font-size-small {
  font-size: 13px;
  line-height: 16px; }

.font-size-medium {
  font-size: 16px;
  line-height: 24px; }

.font-size-large {
  font-size: 20px;
  line-height: 24px; }

.font-size-x-large {
  font-size: 26px;
  line-height: 32px; }

.font-size-2x-large {
  font-size: 33px;
  line-height: 40px; }

.font-size-3x-large {
  font-size: 42px;
  line-height: 48px; }

.font-size-4x-large {
  font-size: 53px;
  line-height: 56px; }

.font-size-5x-large {
  font-size: 68px;
  line-height: 72px; }

.u-img-round {
  max-width: 240px; }

.icons {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  text-align: center; }

.icons__item {
  margin: 8px;
  padding: 8px;
  width: 96px;
  background: #f6f5f3; }

.colors__sample--black {
  background: black; }

.colors__sample--blue-lighter {
  background: #dbf1ff; }

.colors__sample--blue-light {
  background: #3e9bd6; }

.colors__sample--blue-base {
  background: #097fc9; }

.colors__sample--blue-dark {
  background: #065e94; }

.colors__sample--blue-darker {
  background: #03283f; }

.colors__sample--green-lighter {
  background: #e0f8cd; }

.colors__sample--green-light {
  background: #a6e076; }

.colors__sample--green-base {
  background: #78c738; }

.colors__sample--green-dark {
  background: #468513; }

.colors__sample--green-darker {
  background: #1f4302; }

.colors__sample--grey-cool-light {
  background: #dddddd; }

.colors__sample--grey-cool-base {
  background: #c3c3c3; }

.colors__sample--grey-cool-dark {
  background: #575757; }

.colors__sample--grey-cool-darker {
  background: #383838; }

.colors__sample--grey-warm-lighter {
  background: #fafafa; }

.colors__sample--grey-warm-light {
  background: #f6f5f3; }

.colors__sample--grey-warm-base {
  background: #e8e8e8; }

.colors__sample--grey-warm-dark {
  background: #d3d2d0; }

.colors__sample--grey-warm-darker {
  background: #a3a2a0; }

.colors__sample--grey-warm-darkest {
  background: #838280; }

.colors__sample--magenta-lighter {
  background: #ecc3df; }

.colors__sample--magenta-light {
  background: #ab3383; }

.colors__sample--magenta-base {
  background: #952d72; }

.colors__sample--magenta-dark {
  background: #6e124f; }

.colors__sample--magenta-darker {
  background: #310622; }

.colors__sample--orange-red-lighter {
  background: #ffe2d9; }

.colors__sample--orange-red-light {
  background: #f98f6f; }

.colors__sample--orange-red-base {
  background: #ef4d1c; }

.colors__sample--orange-red-dark {
  background: #c23f17; }

.colors__sample--orange-red-darker {
  background: #7b2309; }

.colors__sample--purple-lighter {
  background: #e5b8e2; }

.colors__sample--purple-light {
  background: #a65ca1; }

.colors__sample--purple-base {
  background: #772d72; }

.colors__sample--purple-dark {
  background: #52174e; }

.colors__sample--purple-darker {
  background: #270525; }

.colors__sample--red {
  background: #d60036; }

.colors__sample--turquoise-lighter {
  background: #d1faff; }

.colors__sample--turquoise-light {
  background: #52d3e4; }

.colors__sample--turquoise-base {
  background: #0fb4ca; }

.colors__sample--turquoise-dark {
  background: #088b9c; }

.colors__sample--turquoise-darker {
  background: #03505a; }

.colors__sample--yellow-lighter {
  background: #ffefc6; }

.colors__sample--yellow-light {
  background: #ffdd86; }

.colors__sample--yellow-base {
  background: #fbc740; }

.colors__sample--yellow-dark {
  background: #c49621; }

.colors__sample--yellow-darker {
  background: #6b4f07; }

.colors__sample--white {
  background: white; }

@media only screen and (min-width: 980px) {
  .colors {
    -moz-column-count: 2;
         column-count: 2; } }

.colors__item-title {
  text-transform: capitalize;
  font-weight: 400; }

.colors__item {
  margin-bottom: 32px;
  page-break-inside: avoid;
       break-inside: avoid; }

.colors__list {
  margin: 0;
  padding: 0;
  list-style: none; }

.colors__color {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }

.colors__sample {
  width: 100%;
  max-width: 48px;
  height: 48px;
  margin-right: 16px; }
